issue,title,primary finding,validator comment,status,root cause (URL),size
validation-1428,Potential DOS Attack Due to High Gas Consumption with Increasing Whitelisted Users,,Insufficient proof. bytes32[] is meant for 1 user,Unsatisfactory,,14
validation-1092,Validation for taxcut,,Analyzer: [L-3] Division by zero not prevented,Unsatisfactory,,16
validation-1091,Validation Tax Cut,,Analyzer: [L-3] Division by zero not prevented,Unsatisfactory,,16
validation-1095,Validation for taxcut and maxAllowedClaimDivisor,,Analyzer: [L-3] Division by zero not prevented,Unsatisfactory,,18
validation-760,Incorrect Batch Size Handling in writeEntropyBatch2,,lastInitializedIndex is the starting point of the next batch,Unsatisfactory,,18
validation-1043,tx.origin Usage in startAirdrop,,AirDrop.sol os OOS,Unsatisfactory,,19
validation-1484,_incrementGeneration() sets Generationmintcount to zero,validation-741,Partial for inadeuate POC alleging unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,20
validation-1140,Function receive() in NukeFund doesn't check the address(0) before sending the Eth,,Low QA on address(0),Unsatisfactory,,20
validation-1290,Token ID Management and Generation Constraint Issue in `TraitForgeNft` Contract,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,21
validation-1132,Incorrect Calculation of nukeFactor and forgePotential in deriveTokenParameters Function,validation-170,Could round to 0 e.g. when entropy is 999999. This report has a second issue to be deduped to #295,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,21
validation-1100,"Chain may reformed, causing financial loss",validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,21
validation-767,"inconsistencies in the initialization process writeEntropyBatch1(), writeEntropyBatch2(), and writeEntropyBatch3()",,Circumvented by require(). lastInitializedIndex is the starting point of the next batch,Unsatisfactory,,21
validation-355,Predictability of entropy value in entropygenerator.sol contract,,Low QA on unneededly expensive VRF,Unsatisfactory,,21
validation-332,Precision Loss and Potential Exploit in `DevFund::receive` Function Due to Division Before Multiplication,,remaining is there to capture dust,Unsatisfactory,,21
validation-1278,Users can mint desirable NFTs by reverting transaction,,nonReentrant is there to thwart the exploit,Unsatisfactory,,22
validation-1261,Missing Pausing Mechanism,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,22
validation-1192,Unusable Minting Function for Subsequent Generations,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,22
validation-902,Smart users can monitor the variables and try to get golden god NFT in predictable way,,Intended design for users to race grab,Unsatisfactory,,22
validation-784,"NFT minting is suceptible to ""entropy minning""",,Low QA on unneededly expensive VRF,Unsatisfactory,,22
validation-745,Distribution of genes is uneven,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,22
validation-666,No slippage control in the swap of DAOFund contract,,DAOFund.sol is OOS,Unsatisfactory,,22
validation-656,Protocol can't be paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,22
validation-376,Multiple contracts cannot be paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,22
validation-179,"owner can set any value as taxcut in EntityTrading contract, eventually can sends  most part of the paid eth to NukeFund contract  when a TraitForge NFT is buyed",,Owner is trusted,Unsatisfactory,,22
validation-1367,The entropy of entities is determined before mining,,Low QA on unneededly expensive VRF,Unsatisfactory,,23
validation-1342,Malicious Attacker/Node can frontrun and gain the Golden number (999999),,Intended design for users to race grab,Unsatisfactory,,23
validation-1312,`EntropyGenerator::deriveTokenParameters` counts nukeFactor not correctly,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,23
validation-1273,EntityForging::forgeWithListed does not return extra money sent,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,23
validation-1173,Invalid calculation leading to wrong nuke factor,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,23
validation-1162,Bypassing the Check for the Number 999999,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,23
validation-1109,Entropy Collisions Risk in forge Function of TraitForgeNft Contract,validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,23
validation-1105,"From EntropyGenerator contract, hashValue and pseudoRandomValue variables are pseudo-randomly generated, allowing for gameable NFT minting.",,Low QA on unneededly expensive VRF,Unsatisfactory,,23
validation-1044,Potential Reentrancy in claim Function,,AirDrop.sol os OOS,Unsatisfactory,,23
validation-916,onlyOwner modifier in initializeAlphaIndices() restrict forge() calling,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,23
validation-880,update in maxAllowedClaimDivisor can cause issue to users ,,"Commonly known issue. And, owner is trusted",Unsatisfactory,,23
validation-795,Not random,,Low QA on unneededly expensive VRF,Unsatisfactory,,23
validation-501,Pending Rewards Calculation,,Makes no difference. The intent is to have old value of info.weight taken care of prior to new update,Unsatisfactory,,23
validation-399,Use SafeTransferFrom  and safeTransfer  instead of transfer and transferFrom,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,23
findings-9,Contracts can't be paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,23
validation-1449,User can predict when the NFT with 999999 entropy will be minted,,Intended design for users to race grab,Unsatisfactory,,24
validation-1443,The receive function is designed to distribute incoming Ether among developers based on their weights (totalDevWeight). ,validation-1308,Partial credit as report POC is inadequate and irrelevantly link instances. Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,24
validation-1380,Nuking a token that is listed for forging leads to stale data in the EntityForging contract,validation-111,Fix is desired but QA bound as there's no loss of fund entailed in the DoS,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityTrading/EntityTrading.sol#L20,24
validation-1314,Division by Zero,,Analyzer: [L-3] Division by zero not prevented,Unsatisfactory,,24
validation-1253,The Best Entropy Tokens Don't Mature As Fast As Intended,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,24
validation-1049,Use ReentrancyGuard,,DAOFund.sol is OOS,Unsatisfactory,,24
validation-670,[M-3] `Airdrop` contract cannot be paused because no relevant function is implemented in the `TraitForgeNft` contract,validation-1048,Inadequate control over AirDrop.sol ,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,24
validation-268,reentrancy-send-eth,,Insufficient proof,Unsatisfactory,,24
validation-265,reentrancy-eth,,Insufficient proof,Unsatisfactory,,24
validation-194,Users are incentivized to wait until they get a favorable entropy value,,Low QA on unneededly expensive VRF,Unsatisfactory,,24
findings-209,Biased entropy generation,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,24
findings-105,The Golden God is not at a random point,,Intended design for users to race grab,Unsatisfactory,,24
findings-33, Unsafe use of random numbers,,Low QA on unneededly expensive VRF,Unsatisfactory,,24
findings-7,Some ETH amount will be stuck in the NukeFund contract indefinetely,,Insufficient proof alleging the stuck fund,Unsatisfactory,,24
validation-1393,`TraitForgeNft` resets generation `generationMintCounts` for forged tokens,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,25
validation-1389,Loss of User's fund if user directly burns the NFT,,Low QA on caller mistake,Unsatisfactory,,25
validation-1359,Front Running the burn/claim of 'NukeFund::nuke',findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,25
validation-1093,Potential Manipulation of Mint Prices in TraitForgeNft Contract,,"Commonly known issue. While user cap is advised, race grab is welcome",Unsatisfactory,,25
validation-964,Malicious user may frontrun and mint tokens with best characteristics,,Low QA on unneededly expensive VRF,Unsatisfactory,,25
validation-872,Wrong usage of percentage across the codebase,validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,25
validation-667,NFT operator cannot nuke the token,,"msg.sender no need be owner. OZ: (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth))",Unsatisfactory,,25
validation-427,Users can bypass NukeFund tax by using third party marketplaces,,Commonly known issue on tax evasion via private transfer and deal,Unsatisfactory,,25
validation-263,arbitrary-send-eth,,Insufficient proof,Unsatisfactory,,25
validation-258,reentrancy-eth,,Insufficient proof,Unsatisfactory,,25
validation-226,Contracts cannot be paused as intended.,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,25
validation-148,pess-uni-v2,,DAOFund.sol OOS,Unsatisfactory,,25
findings-184,"Bad randomness, attacker could receive 9999 easily.",,Intended design for users to race grab,Unsatisfactory,,25
findings-135,TraitForgeNft::_incrementGeneration resets count of already minted tokens for new generation,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,25
validation-1460,High Probability of Missing Entropy Value 999999 (Dynamic Slot and Index Selection),validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,26
validation-1356,Excess fees is not transferred to user and gets locked in contract.,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,26
validation-1322,Emitting Events After External Calls,,Low QA frequently reported by bots in the past,Unsatisfactory,,26
validation-1317,`EntropyGenerator::deriveTokenParameters` calculates forgePotential not correctly,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,26
validation-1313,Weak Pseudo-Random entropy/trait generation gives preferred selection on mint,,Low QA on unneededly expensive VRF,Unsatisfactory,,26
validation-1297,The Nuke Fund address in TraitForgeNft could be set to any contract,,Low QA on sanity check,Unsatisfactory,,26
validation-1207,In EntityTrading.sol listNFTForSale() will fail for approved by NFT owner callers,,Intended design. QA at best,Unsatisfactory,,26
validation-1177,Potential Stale Listings in listForForging Function,,Intended design. No loss of funds entailed. QA at best,Unsatisfactory,,26
validation-1148,Overflow in Pseudo-Random Value Calculation,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,26
validation-1098,User Funds May Get Locked in The EntityForging Contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,26
validation-992,No way to pause protocol across multiple contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,26
validation-990,DAOFund is an easy target for MEV bots to exploit,,DAOFund.sol is OOS,Unsatisfactory,,26
validation-985,Improper access control in the Airdrop contract,validation-1048,Inadequate control over AirDrop.sol ,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,26
validation-890,It is possible to have multiple golden god in one generation due to missing condition in writeEntropyBatch3,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,26
validation-687,entropyGenerator#initializeAlphaIndices() will always revert outside of entropyGenerator contract,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,26
validation-557,divide-before-multiply,,remaining is there to capture dust,Unsatisfactory,,26
validation-269,"_isApprovedOrOwner(spender, tokenId) function is not implemented in the TraitForgeNft contract.",,"msg.sender no need be owner. OZ: (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth))",Unsatisfactory,,26
validation-232,Precision loss on days,validation-471,Likely significant precision deviation entailed,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L118-L133,26
validation-219,[M-2] `TraitForgeNft::mintToken` and `TraitForgeNft::mintWithBudget` can be front-run allowing a few malicious actors to get all the favourable NFTs with good traits,,Low QA on unneededly expensive VRF,Unsatisfactory,,26
validation-132,Weak PRNG in `initializeAlphaIndices` can be exploitable by users to find out the exact slot and number selection point. index required for the ,,Low QA on unneededly expensive VRF,Unsatisfactory,,26
validation-33,Nuke factor (NFT value) can be calculated beforehand,,Low QA on unneededly expensive VRF,Unsatisfactory,,26
findings-208,Minting with unset entropies,,Low QA on unneededly expensive VRF,Unsatisfactory,,26
findings-25,Bad source of randomness,,Low QA on unneededly expensive VRF,Unsatisfactory,,26
validation-1472,Excess Ether Sent by User Stuck in Contract Leading to Loss of Funds,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,27
validation-1438,Off-By-One Error in Forge and Merge Token Potential Checks,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,27
validation-1325,External Call Without Gas Limit (in receive and safeRewardTransfer),,Analyzer: [L-4] External call recipient may consume all transaction gas,Unsatisfactory,,27
validation-1304,`EntropyGenerator::writeEntropyBatch1` and `EntropyGenerator::writeEntropyBatch2` does not check 999999 value correctly,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,27
validation-1280,`EntityForging::listForForging` allows forge more times than is allowed by forgePotential,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,27
validation-1240,Incorrect Calculation of `Forge Potential` in `EntropyGenerator` Contract,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,27
validation-1224,Broken Approvals in `EntityTrading`,,Intended design. QA at best,Unsatisfactory,,27
validation-1120,Forging Limit Bypass Due to Ineffective Comparison Operator,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,27
validation-1072,Approved role may not able to get proper functionality of the protocol,,Intended design. QA at best,Unsatisfactory,,27
validation-911,User can forge between his own NFTs,,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,27
validation-885,Excess ETH is not refunded.,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,27
validation-871,EntityTrading’s implementation can lead to stuck tokens,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,27
validation-706,All entities will have 0 entropy,,Low QA on uninitialized entropy,Unsatisfactory,,27
validation-642,mintWithBudget() function doesnt work after 1st generation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,27
validation-641,TraitForgeNft::mintWithBudget() will always fail after the maxTokensPerGen tokens mint finished,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,27
validation-504,Contracts in scope are intended to be pausable but are not,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,27
validation-151,reentrancy-eth,,Insufficient proof,Unsatisfactory,,27
validation-143,UniswapV2 integration vulnerabilities must not be present in the codebase,,DAOFund.sol OOS,Unsatisfactory,,27
validation-101,events-maths,,AirDrop.sol os OOS,Unsatisfactory,,27
validation-100,"In the `safeTransferFrom()` function, the `from` parameter must be associated with `msg.sender`",,AirDrop.sol os OOS,Unsatisfactory,,27
validation-1478,Extra division by MAX_DENOMINATOR which leads to incorrect calculation of potentialClaimAmount.,,Insufficient proof alleging the flaw,Unsatisfactory,,28
validation-1453,Predictable Randomization Using keccak256 (Predictable Entropy Generation),,Low QA on unneededly expensive VRF,Unsatisfactory,,28
validation-1350,The forger owner can scam the merger who wants to forge with his token,,Commonly known issue. User mistake considered low QA in this context (unlike #770),Unsatisfactory,,28
validation-1318,Inconsistent State Updates,,Insufficient proof alleging the flaw,Unsatisfactory,,28
validation-1270,Bad source of randomness,,Low QA on unneededly expensive VRF,Unsatisfactory,,28
validation-1239,`EntityForging::forgeWithListed` requires user sends at least `forgingFee` in their call. However any amount greater than `forgingFee` will be trapped in the contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,28
validation-1139,Contracts inherit from `Openzeppelin::Pausable` but don't expose pausing/unpausing functionalities,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,28
validation-1022,Tax fees collected at minting may be burnt,,Low QA on address(0),Unsatisfactory,,28
validation-898,forgeWithListed loss of funds if more than required fee is sent,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,28
validation-801,Overpayment in EntityForging by players due to lack of accounting,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,28
validation-649,No function to pause in TraitForgeNft though it's Pausable,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,28
validation-555,arbitrary send-eth,,It's msg.sender locked,Unsatisfactory,,28
validation-335,Dev Management Functions in `DevFund` contract Bypass Pause Mechanism,,Intended design on admin functions,Unsatisfactory,,28
validation-291,`fetchListings` could always `timeout/run out of gas` if many forger NFT are listed as the `loop is unbounded`,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,28
validation-45,User can maximize profits by front-running,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,28
validation-38,Weak and predictable generation of random indices,,Low QA on unneededly expensive VRF,Unsatisfactory,,28
validation-1482,Misleading lastInitializedIndex Handling (Incorrect Slot Initialization Count),,Insufficient proof alleging the flaw,Unsatisfactory,,29
validation-1471,buyNFT function remains unusable even after contract deployment due to uninitialized nukeFundAddress. ,,Low QA on uninitialized variable,Unsatisfactory,,29
validation-1279, `listedTokenIds `mapping is not updated when a listing is canceled through the `_cancelListingForForging` function,,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,29
validation-1233,`mintWithBudget()` gets DOSed when `_tokenIds >maxTokensPerGen`,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,29
validation-1061,`EntropyGenerator` has weak prng,,Low QA on unneededly expensive VRF,Unsatisfactory,,29
validation-989,Wrong implementation prevents TraitForgeNft.sol from minting beyond the first generation,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,29
validation-887,Golden God generation is not guaranteed,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,29
validation-754,payable methods  - Calculate developer's share (10%) - would lead to problem.,,msg.value is ETH with 18 decimals,Unsatisfactory,,29
validation-590,Excessive funds are not returned and lost in `EntityForging::forgeWithListed`,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,29
validation-443,"If you want to mint with budget you can't do that when _tokenIds < maxTokensPerGen, but _tokenIds is an nft id and keeps increasing",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,29
validation-365,Users might mint themselves a different generation that expected,,Intended design,Unsatisfactory,,29
validation-317,"""Golden God"" NFT can be placed in the 1st or 2nd entropy batches",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,29
validation-264, Excesses are not refunded to  mergerTokenId’s owner when the function forgeWithListed is called.,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,29
validation-207,Users can use another address to merge heir tokens,,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,29
validation-1348,Value can become trapped in the `EntityForging` contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,30
validation-1324,Unnecessary Use of Pausable Modifiers in Smart Contracts Without Corresponding Pause/Unpause Functionality,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,30
validation-1263,Ineffective Validation of Generated Entropy Values Allowing the Occurrence of `999999`,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,30
validation-1197,Golden God Value (999999) Check Ineffectiveness in `EntropyGenerator` Contract,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,30
validation-1183,Bad source of randomness,,Low QA on unneededly expensive VRF,Unsatisfactory,,30
validation-1181,`999999` entropy still can appear in `writeEntropyBatch1` and `writeEntropyBatch2`,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,30
validation-1152,Lack of Functionality to Pause Contracts Render `whenNotPaused` Modifier and `Pausable` Library Redundant,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,30
validation-1063,Call to non-existing contracts returns success,,Low QA frequently reported by bots in the past,Unsatisfactory,,30
validation-1000,"Pausing of the Airdrop.sol contract will incidentally pause minting, `forge()` and `burn()` of the TraitForgeNft.sol contract",,Expected scenario,Unsatisfactory,,30
validation-901,EntityForging::fetchListings DOS,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,30
validation-855,There can be more than maxTokensPerGen in generation due to incorrect _incrementGeneration function,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,30
validation-688,We can exceed the 10th generation,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,30
validation-668,Contracts are intended to be pausable but aren't,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,30
validation-663,Valuable entropies can be frontrun,,Intended design for users to race grab,Unsatisfactory,,30
validation-598,"There can be multiple ""Golden god"" (entropy = 999999) in a generation",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,30
validation-453, `TraitForgeNft::_incrementGeneration()` fails while calling an onlyOwner function `initializeAlphaIndices()` in `EntropyGenerator.sol` ,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,30
validation-422,Devs may lost they rewards forever,,Intended design on the dev function,Unsatisfactory,,30
validation-241,Contracts can't be paused as the pause function is not overridden,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,30
validation-238,Use safeTransferFrom instead of transferFrom for ERC721 transfers,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,30
findings-68,TraitForgeNFT minting will always fail because of `addUserAmount`,validation-1048,Inadequate control over AirDrop.sol ,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,30
validation-1373,Unsafe use of _transferFrom instead of _safeTransferFrom,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,31
validation-1229,"In `EntropyGenerator`, `pseudoRandomValue` can not hold 13 six-digit numbers, which causes the last entropy slot be always less than `73664`",findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,31
validation-1155,Sending native ETH in `EntityForging` and `EntityTrading` to the forger/seller will causes wasting the buyer's gas as an attacker could use a gas wasting contract as the forger/seller,,Low QA frequently reported by bots in the past,Unsatisfactory,,31
validation-1126,Absence of Refund Mechanism for Excess Payment,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,31
validation-1122,"Usage of nonsafe ERC721 methods, could lead to loss of tokens",,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,31
validation-975,The same NFTs are produced within the same generation if the same parentId is forged.,validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,31
validation-972,Forge of the same parentId NFTs results in multiple invocations of `nuke`  function and numerous repetitive withdrawals of funds from the `NukeFund.sol` contract.,,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,31
validation-664,[H-5] None of the contracts can be paused as no external function is implemented,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,31
validation-535,User can lose funds `EntityForging.sol:forgeWithListed()`.,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,31
validation-526,Multiple scenarios of rounding down issues,,remaining is there to capture dust,Unsatisfactory,,31
validation-480,Contracts can not be paused since they do not implement ```Pausable``` contract correctly,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,31
validation-424,EntityForging doesn't refund excess funds,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,31
validation-178,The receive() function in the NukeFund contract is vulnerable to a Denial of Service (DoS) attack,,Commonly known issue on spamming,Unsatisfactory,,31
validation-49,The Pausable feature is ineffective,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,31
findings-160,The protocol does not implement any pausing functionality.,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,31
validation-1385,Potential for Setting Entropy to 999999,,Insuuficient proof alleging the biased flaw,Unsatisfactory,,32
validation-1349,All the Nfts will have similar traits and a lot of duplicates in the later Generation Nfts killing the game dynamics,validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,32
validation-1221,Incorrect Calculation of `Nuke Factor` in `EntropyGenerator` Contract,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,32
validation-1196,`taxCut` variable can take 100% as `devShare`,,Owner is trusted,Unsatisfactory,,32
validation-1097,Incorrect Ether transfer recipient in `nuke` function allows operator to receive claimed funds,validation-40,Severe flaw if operator were involved,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L177,32
validation-1025, if the ´nukeFundAddress´ isn't set it leads to a value loss,,Low QA on address(0) check,Unsatisfactory,,32
validation-1016,Non-existent input validation on `setOneYearInDays` will break protocol invariants,,Low QA on input mistake by the owner,Unsatisfactory,,32
validation-896,Owner of a Forger token can prevent the execution of forgeWithListed ,,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,32
validation-852,There may not be golden god in each generation,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,32
validation-837,Incorrect comparison of `_tokenIds` with `maxTokensPerGen` causes mismanagement of generation token counts,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,32
validation-789,Front-Running on Nuking Leads to Matured NFT Guaranteed Nuke Funds Rewards Lost,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,32
validation-703,`mintToken` could be Front-run to Get A Good Entropy,,Intended design for users to race grab,Unsatisfactory,,32
validation-586,_incrementGeneration() function will always revert,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,32
validation-581,Users can’t both sell and forge a nft together which is unfair.,,Intended design,Unsatisfactory,,32
validation-259,function writeEntropyBatch1/writeEntropyBatch2/writeEntropyBatch3 will be DOSed in contract   EntropyGenerator.,,Devoid of coded POC eliciting OOG,Unsatisfactory,,32
validation-97,Incorrect Usage of `taxCut` for Fee Calculation,validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,32
findings-31,NukeFund::nuke() doesn't check the amount received by the user,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,32
findings-20,Handling fee can be 100%（2）,,Owner is trusted,Unsatisfactory,,32
validation-1442,listForForging doesn't update forging count,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,33
validation-1323,Wrong calculation of `nukeFactor` and `forgePotential` inside `deriveTokenParameters`,validation-170,Could round to 0 e.g. when entropy is 999999. This report has a second issue to be deduped to #295,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,33
validation-1288,`EntropyGenerator::writeEntropyBatch` functions are bad source of randomness,,Intended design for users to race grab,Unsatisfactory,,33
validation-1247,"`_mintInternal` only increments the generation if current one is full, but other next generations can also be full due to forging entities",validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,33
validation-1226,Raw call to `forgerOwner` in `EntityForging::forgeWithListed` and `EntityTrading::buyNFT` could cause issues,,Low QA frequently reported by bots in the past,Unsatisfactory,,33
validation-1041,`fetchListings` will fail due to gas limits,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,33
validation-994,It is possible for users who has claimed rewards and contribute it back to DevFund.sol to be unable to claim their portion of the funds,,claim() is nonReentrant,Unsatisfactory,,33
validation-971,"Potential missing “the Golden God” entropy, of “999999” value from a generation, due to storing that value in the last elements of the `entropySlots` array.",validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,33
validation-907,Forger NFTs can be forged N+1 times in a year instead of N,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,33
validation-835,Pausing protocol is impossible.,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,33
validation-819,Incorrect comparison between forgingCount and forgePotential allows user to list one more time,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,33
validation-780,Unintended Global Minting Cap in TraitForgeNFT::mintWithBudget Contract halts mintWithBudget functionality when _tokenIds = maxTokensPerGen,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,33
validation-774,Unintended Overpayments in EntityForging resulting to players distrust,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,33
validation-683,The current generation can go over the maximum as no checks are enforced,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,33
validation-673,`pause/unpause` functionalities not implemented in many pausable contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,33
validation-661,Next minted NFT can be predicted,,Low QA on unneededly expensive VRF,Unsatisfactory,,33
validation-605,Incorrect check to prevent golden god in writeEntropyBatch1 and writeEntropyBatch2,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,33
validation-369,Users might be forced to sell their NFT in a certain case,,Intended design,Unsatisfactory,,33
validation-368,Users might burn their NFTs for a significantly lower amount than expected,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,33
validation-208,Incorrect Modulus Operation with Large Values,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,33
validation-16,Contracts are meant to be pausable but it is impossible in practice,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,33
validation-1455,Front-Running Vulnerability in Slot and Number Index Selection (Deterministic Selection + Revealed Return Value),,Low QA on unneededly expensive VRF,Unsatisfactory,,34
validation-1447,External Call Without a Gas Budget (Transfer to Seller and Transfer to NukeFund),,[L-4] External call recipient may consume all transaction gas,Unsatisfactory,,34
validation-1429,Missing slippage check in the nuke function,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,34
validation-1418,Skewed NukeFactor Calculations Disadvantage Players in Later Generations,,Intended design,Unsatisfactory,,34
validation-1407,`calculateNukeFactor()` that gets called from `nuke()` when dividing makes wrong assumption ,,Discord: It all depends on the denominator but all are correct from what I know,Unsatisfactory,,34
validation-1400,Unintended transfer to burn addresshttps://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L361,,Low QA on address(0),Unsatisfactory,,34
validation-1274,TraitForgeNft.mintWithBudget() stops working after a certain point,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,34
validation-1214,frontrunning in `NukeFund::Nuke` might lead users to lose up to 50% of their `claimAmount` prize,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,34
validation-1074,Incorrect `finalNukeFactor` and Maturation Calculation,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,34
validation-1033,No excess payment refund in forgeWithListed() function,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,34
validation-984,"Potential Exclusion of ""The Golden God"" Entropy in Generation",validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,34
validation-978,Mint price check occurring before `_incrementGeneration` leads to incorrect mint price accounting for the first normal token mint of newly incremented generation,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,34
validation-931,Update in taxCut in EntityForging and EntityTrading affects existing open positions of forgers and sellers ,,Owner is trusted,Unsatisfactory,,34
validation-800,"Gas Griefing via "".call""",,Analyzer: [L-4] External call recipient may consume all transaction gas,Unsatisfactory,,34
validation-685,Wrong value of a variable makes the nuke factor of an NFT 10 times lower than expected,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,34
validation-645,Token ID and entropy are predictable,,Low QA on unneededly expensive VRF,Unsatisfactory,,34
validation-633,Nuke can be frontrunned,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,34
validation-593,Attacker can frontrun a Forge and cause grievance to the user,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,34
validation-554,centralized risk for trusted owner,,Low QA on centralization,Unsatisfactory,,34
validation-544,Ownership Restriction in `EntropyGenerator::initializeAlphaIndices()` Prevents Generation Increment in `TraitForgeNft::_incrementGeneration` ,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,34
validation-523,Potential Front-Running Vulnerability via Flash Loans in `EntityTrading` Contract,,"Commonly known issue. Also, buy() is nonReentrant",Unsatisfactory,,34
validation-210,Sellers can front-run buyers and change the value of their NFT,,Intended design,Unsatisfactory,,34
validation-162,Incorrect Reward Calculation:,,Makes no difference. The intent is to have old value of info.weight taken care of prior to new update,Unsatisfactory,,34
findings-183,Use `safeTransferFrom` Instead of `transferFrom` for ERC721,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,34
findings-120,Incrementing generation in TraitForgeNft.sol is not possible due to an incorrect modifier in EntropyGenerator.sol's initializeAlphaIndices() function,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,34
findings-113,Listers can DOS mergers/buyers,,Intended design,Unsatisfactory,,34
findings-98,Contracts doesn't override _pause/_unpause from `Pausable.sol`,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,34
validation-1259,`_incrementGeneration()` inside `_mintNewEntity()` would never work,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,35
validation-1213,"More than 10,000 NFTS gets minted in one generation due to extra NFTs getting mint through `_mintNewEntity()`",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,35
validation-1166,`mintWithBudget()` will not work after the first generation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,35
validation-1083,Predictable Entropy Values in EntropyGenerator Contract Allows Users to Exploit Minting,,Low QA on unneededly expensive VRF,Unsatisfactory,,35
validation-1065,Unrestricted ETH Transfers to NukeFund Contract Allow Malicious Manipulation,,There's no economical benefits doing this,Unsatisfactory,,35
validation-1053,Proper Validation:,,Insufficient proof,Unsatisfactory,,35
validation-1024,"Forged entity sharing the accounting from `10,000` quota, would make the quota fill before for the normal mint Golden God slot index is reached for a generation",validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,35
validation-939,Incorrect check for forging count of entity during listing,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,35
validation-923,`pause/unpause` functions are not implemented in all of the contracts.,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,35
validation-881,"There is no mechanism to withdraw funds from NukeFund contract, this causes the remaining funds on NukeFund to be locked",,Low QA,Unsatisfactory,,35
validation-846,mintWithBudget function doesn't work after maxTokensPerGen or more entities are in circulation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,35
validation-692,Minting will halt after a total of 10k or more entities exist,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,35
validation-653,No contract functions can be paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,35
validation-600,Wrong calculation of indices in initializeAlphaIndices() function,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,35
validation-597,Values mentioned in the Docs vary greatly from the current values.,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,35
validation-491,Users can mint tokens in new generations by paying less fees strategically/gaming the protocol.,,Intended design,Unsatisfactory,,35
validation-482, Using `block.number` is bad source of randomness.,,Low QA on unneededly expensive VRF,Unsatisfactory,,35
validation-370,User funds can get stuck in the `EntityForging` contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,35
validation-82, when msg.sender is not used as from in transferFrom.,,AirDrop.sol os OOS,Unsatisfactory,,35
findings-50,Tax cut can be changed after listing,,Owner is trusted,Unsatisfactory,,35
validation-1370,Constructor Parameter Validation,,Low QA on sanity check,Unsatisfactory,,36
validation-1364,User can accidentally burn NFT,,Low QA on caller mistake,Unsatisfactory,,36
validation-1281,Alignation mismatch in NukeFactor   ,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,36
validation-1222,Non-random bad performance assigned to certain set of tokens,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,36
validation-1216,Using `ERC721.transferFrom()` instead of `safeTransferFrom()` may result in the user's NFT being locked in a contract that does not support ERC721,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,36
validation-980,Unintended Fund Locking in `EntityForging.sol` due to Unhandled Excess `msg.value`,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,36
validation-977,"More than 10,000 NFTs can be produced per generation.",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,36
validation-968,Impossible execution of the `forgeWithListed` and `buyNFT` due to the `forgerOwner` or `listing.seller` advantage.,,Low QA frequently reported by bots in the past,Unsatisfactory,,36
validation-596,Wrong updation of lasttransferredtimestamp of an entity,,Intended design,Unsatisfactory,,36
validation-500,Sellers can sell nfts to buyers and burn/nuke the nfts after selling.,,Will be taken care of by _update(),Unsatisfactory,,36
validation-433,`nftContract` address cannot be updated in future,,Low QA on the immutable design,Unsatisfactory,,36
validation-432,`mintWithBudget` will only works for the first `maxTokensPerGen`,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,36
validation-314,"If a full generation is minted, the prev gen NFT will not be forgable",validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,36
validation-175,Forger can front-run the merger and increase it's forging fee,,Commonly known issue. User mistake considered low QA in this context (unlike #770),Unsatisfactory,,36
validation-154,`Golden God` Tokens can be minted twice per generation,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,36
validation-136,NukeFund::nuke() is vulnerable to MEV attack,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,36
validation-85,Missing `pause/unpause` functionalities in contracts inheriting pausable,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,36
validation-83,The return value of an external transfer/transferFrom call is not checked,,AirDrop.sol os OOS,Unsatisfactory,,36
findings-42,Forger/Merger pair can be used for multiple forges,,Commonly known issue involving multiple controlled addresses,Unsatisfactory,,36
validation-1457,Duplicate Entropy in Pseudo-Random Value Generation (Low Probability but Potential Collisions),,Low QA on unneededly expensive VRF,Unsatisfactory,,37
validation-1186,`EntityForging.sol::forgeWithListed()` allows merger to call function with `msg.value` > Listing.fee but the excess amount is not refunded back to the caller(merger),validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,37
validation-1070,There a reentrancy in DevFund.claim(),,claim() is nonReentrant,Unsatisfactory,,37
validation-925,Calculation of forgePotential doesn't comply with the document,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,37
validation-862,The inherited pausable functionality will not work due to missing public/external callable functions to trigger the state change,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,37
validation-785,protocol won't be able to pause or unpaused some crucial functions when the time is right,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,37
validation-520,Wrong implementation of percentages could lead to wrong fee calculations,validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,37
validation-423,Owner can frontrun forging to sell worthless NFT,,Intended design,Unsatisfactory,,37
validation-345,forgingCounts can be bigger than forgePotential for a tokenid.,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,37
validation-302,Entropy generation deviates from the whitepaper,,Low QA on doc mismatch,Unsatisfactory,,37
validation-224,Users can farm airdrop points,,Intended design,Unsatisfactory,,37
validation-217,god NFT is predictable and even controllable,,Low QA on unneededly expensive VRF,Unsatisfactory,,37
validation-182,Predictable Random Values Due to Use of Block Timestamps and Numbers,,Low QA on unneededly expensive VRF,Unsatisfactory,,37
findings-110,TraitForgeNft._incrementGeneration always fails because TraitForgeNft is not the owner of EntropyGenerator,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,37
findings-19,Handling fee can be charged at 100%,,Owner is trusted,Unsatisfactory,,37
validation-1479,EntropyGenerator.deriveTokenParameters() reports wrong forge potential,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,38
validation-1464,`pause/unpause` functionalities not implemented in many pausable contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,38
validation-1444,Not reverting an empty transaction,,Working good as designed,Unsatisfactory,,38
validation-1362,Predictable Pseudo-Randomness (High),,Low QA on unneededly expensive VRF,Unsatisfactory,,38
validation-1283,Incorrect Access Control breaks minting and forging,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,38
validation-1251,Entities take much longer to mature than assumed,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,38
validation-1250,Range Discrepancy for `performanceFactor`,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,38
validation-1209,Attacker can front run and can claim  the `Golden God`.,,Intended design for users to race grab,Unsatisfactory,,38
validation-1066,Incorrect calculating of mintPrice in mintToken() and mintWithBudget() function for the first mint from generation 2 to generation 10,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,38
validation-997,The magic value of 999999 can clash with certain values of `entropySlot[]`,,Intended design. Insufficient proof alleging the flaw,Unsatisfactory,,38
validation-986,Multiple Nuke Exploitable Forging with Same Parent IDs,,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,38
validation-969,Locked funds within the `EntityForging.sol` contract due to the `forgeWithListed` function not handling the potential extra `msg.value` provided.,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,38
validation-941,State Modifying `getNextEntropy` Function Not Protected by `whenNotPaused`,,Intended design,Unsatisfactory,,38
validation-906,Incorrectly setting the whitelist time,,Low QA on admin input mistake,Unsatisfactory,,38
validation-659,Multiple contracts cannot be paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,38
validation-613,fetchListings() will get progressively more gas inefficient and may result in UI complications.,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,38
validation-585,Number of generations can exceed the maxGeneration set by the admin.,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,38
validation-498,Resetting forging count does not help the game as the presence of extremely powerful entities can cause game imbalance,,Intended design,Unsatisfactory,,38
validation-255,Some `Airdrop` methods are unreachable if `TraitForgeNft` is its owner,validation-1048,Inadequate control over AirDrop.sol ,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,38
validation-250,Wrong `onlyOwner` modifier on `EntropyGenerator.initializeAlphaIndices()` method,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,38
findings-190,"Contract is expected to be Pausable, however, it will never could be executed",validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,38
findings-54,"After 10,000 minted NFTs `mintWithBudget` will stop working",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,38
validation-1436,Tokens with Maturity Less Than 3 Days Can Be Nuked Leading to Loss of Funds,,lastTokenTransferredTimestamp is updated with block.timestamp in _beforeTokenTransfer,Unsatisfactory,,39
validation-1381,Unchecked Arithmetic Operations ,,Low QA using unchecked on assuredly zero chance of overflow,Unsatisfactory,,39
validation-1258,Role Assignment Ratio is incorrect,,Low QA on doc mismatch,Unsatisfactory,,39
validation-1147,`pause()` and `unpause()` functions not implemented in pausable contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,39
validation-1090,High Likelihood of Zero Performance Factor Due to Inconsistent Entropy Generation,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,39
validation-1086,Forgers can be forged more than intended,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,39
validation-1012,Many contracts cannot be paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,39
validation-937,Dev Cannot Claim Income if DevFund Contract is Paused,,Intended design on the dev function,Unsatisfactory,,39
validation-900,`pause/unpause` functionalities not implemented in many pausable contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,39
validation-793,Contracts cannot `be paused!`,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,39
validation-717,taxcut in NukeFund contract can be set to 1 so that entire amount goes to developer instead of nuke (fund),,Owner is trusted,Unsatisfactory,,39
validation-658,mintWithBudget function results in DoS after 10000 treshhold tokenIds,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,39
validation-651,Forging can cause entire generation to have no golden god,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,39
validation-588,Forger entities are allowed to forge 1 additional time,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,39
validation-533,Random Slots are easily predictable,,Low QA on unneededly expensive VRF,Unsatisfactory,,39
validation-525,Hidden division before multiplication will cause rounding issues,validation-471,Likely significant precision deviation entailed,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L118-L133,39
validation-416,forgePotential in EntropyGenerator.deriveTokenParameters is calculated wrongly,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,39
validation-415,nukeFactor is wrongly calculated in EntropyGenerator.deriveTokenParameters.,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,39
validation-306,A chain re-org would make a forger forge the wrong NFT and could even lose funds due to this,,Low QA frequently reported by bots in the past,Unsatisfactory,,39
validation-271, function mintWithBudget will revert after the 1st generation.,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,39
validation-205,Users can predict their entropy,,Low QA on unneededly expensive VRF,Unsatisfactory,,39
validation-192,Wrong mathematical expression makes overflow when initializing values in EntropyGenerator,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,39
validation-105,Lack of `Pause/Unpause` functionalities in many pausable contracts ,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,39
validation-48,Non-functional pause function,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,39
validation-24,The contract cannot be paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,39
validation-9,No maximum generation check for mintToken and mintWithBudget functions ,validation-929,newGeneration <= maxGeneration could have in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,39
validation-6,`pause/unpause` functionality isn't implemented.,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,39
validation-1468,Malicious Manipulation of `maxAllowedClaimDivisor` & `nukeFactorMaxParam` can drain all the Nuke funds - (Potential for Rug-Pull),,Owner is trusted,Unsatisfactory,,40
validation-1307,[H-03] Entropy Of Every Entity Can Be Predicted,,Low QA on unneededly expensive VRF,Unsatisfactory,,40
validation-1298,Division before multiplication in `NukeFund:calculateAge` leading to loss of some rewards.,validation-471,Likely significant precision deviation entailed,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L118-L133,40
validation-1032,Repeatable Identical Entity Creation Through Forging,validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,40
validation-993,Duplicated NFT within the same generation from Identical Parent IDs,validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,40
validation-710,A User Could Avoid Minting Bad `Entropy` Via Reverting in `Refunding`,,Low QA frequently reported by bots in the past,Unsatisfactory,,40
validation-499,_incrementGeneration() resets generationMintcount to 0 even if the gen already has forged entities in it,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,40
validation-486,[H-3] Incomplete Implementation of Pausable Contract Prevents Protocol from Being Paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,40
validation-402,Potential Denial of Service in EntityTrading Contract,,Low QA on uninitialized variable,Unsatisfactory,,40
validation-360,`TraitForgeNft::_incrementGeneration()` reverts due to  permission mismatch,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,40
validation-348,"After the 1st generation, every generation’s(2 to 10) generationMintCounts will be greater than  maxTokensPerGen.",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,40
validation-313,Entropy can be 0 and create,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,40
validation-288,`generationMintCounts` mapping should start from the amount of the forging NFTs and not 0 ,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,40
validation-253,Missing access control in an internal function,,Inheritances will be separately independent among the two,Unsatisfactory,,40
validation-223,User may loses ETH when executes forgeWithListed,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,40
validation-218,mintWithBudget doesn't work with next generation.,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,40
validation-198,Users are not incentivized to mint last tokens of any of the generations,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,40
validation-184,Incorrect check against golden entropy value in the first two batches,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,40
findings-28,"EntropyGenerator::initializeAlphaIndices() implements a wrong modifier, bricking the whole project",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,40
validation-1434,Users cant mint tokens when the value of tokenId reaches maxTokensPerGen,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,41
validation-1292,A player's hold time is reset to zero when placing and cancelling a listing for sale ,,Intended design,Unsatisfactory,,41
validation-1088,Initialization Vulnerability,,Low QA on uninitialized variable,Unsatisfactory,,41
validation-1069,Unnecessary and Always False Condition Check in Entropy Generation,,Low QA on risky gas optimization,Unsatisfactory,,41
validation-1038,`TraitForgeNft#mintWithBudget` will be DoS after the first generation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,41
validation-983,`DevFund::claim()` does not follow CEI,,claim() is nonReentrant,Unsatisfactory,,41
validation-965,Unforeseen Transaction Disruption via Malicious `forgerOwner` or `listing.seller` Contracts,,Low QA frequently reported by bots in the past,Unsatisfactory,,41
validation-947,Missing pause and unpause Functions in Contract inheriting from Pausable,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,41
validation-541,Potential for Multiple 'Golden God' Assignments,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,41
validation-470,Miss-configuration,,Insufficient proof,Unsatisfactory,,41
validation-441,Return variables forgePotential and nukeFactor are wrongly calculated in EntropyGenerator::deriveTokenParameters() function,validation-170,Could round to 0 e.g. when entropy is 999999. This report has a second issue to be deduped to #295,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,41
validation-213,TraitForgeNft cannot properly controll the airdrop contract,validation-1048,Inadequate control over AirDrop.sol ,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,41
validation-187,Missing Validation Check in writeEntropyBatch3 function,validation-154,More than 1 Golden God per generation (Partial credit for not discretely exposing the key issue),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,41
validation-170,`deriveTokenParameters` calculates `nukeFactor` to be always 0,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,41
validation-149,Forging a new token will always be DoSed in cases where 9999 tokens have already been minted for the current generation,,generationMintCounts starts from 0,Unsatisfactory,,41
validation-131,owner can cause NukeFund::nuke function to always revert and eventually rug pull all the funds ,,Owner is trusted,Unsatisfactory,,41
findings-99,Contracts do not implement pause/unpause(),validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,41
findings-66,The NFT with forgePotential not equal to 0 will get one additional forge opportunity than expected.,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,41
validation-1435,"`EntropyGenerator::initializeAlphaIndices` has a wrong `onlyOwner` modifier, which cause severe DoS",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,42
validation-1395,Owner has to set `nukeAddress` and `ageMultiplier`,,Low QA on owner negligence initializing key variables,Unsatisfactory,,42
validation-1377,Rounding Down happens in `calculateAge` function,validation-471,Likely significant precision deviation entailed,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L118-L133,42
validation-1269,The `nukeFactor` calculation in the `EntropyGenerator.deriveTokenParameters` function is errorneous,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,42
validation-1245,Wrong reset of `generationMintCounts` mappings in `_incrementGeneration` function ,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,42
validation-1099,Inconsistent Range for performanceFactor,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,42
validation-1094, Incorrect Role Assignment Ratio,,Low QA on doc mismatch,Unsatisfactory,,42
validation-1075,Wrong Access Control Modifier Used On Entropy:`initializeAlphaIndices()` Eventually Leads To Mint DOS,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,42
validation-1009,Contracts cannot be paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,42
validation-954,The `claim` function in `DevFund.sol` drains all contract funds on each execution.,,Incorrect assumptions,Unsatisfactory,,42
validation-882,Not much incentive to hold the entity instead of nuking,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,42
validation-811,No Pause and Unpause mechanism implemented in varios contracts that use Pausable,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,42
validation-798,Uninitialized Variable - ageMultiplier,,Low QA on owner negligence initializing key variables,Unsatisfactory,,42
validation-704,Tokens with very little to no market value will discourage users from minting due to predictability.,,Low QA on unneededly expensive VRF,Unsatisfactory,,42
validation-695,A number of contracts are intended to be pausable but aren't ,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,42
validation-622,calculateAge() function experience precision loss that will affect user's nuking reward calculations,validation-471,Likely significant precision deviation entailed,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L118-L133,42
validation-474,Permanent Lock of Excessive Funds in `EntityForging::forgeWithListed`,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,42
validation-353,Users can front-run other users who nuke,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,42
validation-180,Insecure Exposure of Entropy and Token Parameters,,Intended design for users to race grab when needed,Unsatisfactory,,42
validation-66,Check if the `to` address is an EOA in the `safeRewardTransfer` function of DevFund.sol contract,,Low QA frequently reported by bots in the past,Unsatisfactory,,42
validation-1480,Arbitrage Opportunity in Forging Mechanism,,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,43
validation-1451,A genration can have more than `maxTokensPerGen` tokens.,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,43
validation-1328,Excess ETH should be refunded in `forgeWithListed` function,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,43
validation-1309, Potential Permanent Denial of Service (DoS) Vulnerability in `mintWithBudget` Function Due to Incorrect maxTokensPerGen Check,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,43
validation-1260,` listedTokenIds` are not updated when a list is removed,,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,43
validation-1185,Initial Owners Still Receive Airdrop After NFT Transfer or Trading,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,43
validation-1116,Precision Loss in `EntityTrading` Contract's NukeFund Contribution,,msg.value is ETH with 18 decimals,Unsatisfactory,,43
validation-1084,Predictability of Entropy,,Low QA on unneededly expensive VRF,Unsatisfactory,,43
validation-998,Uncapped NFT Minting Potential Exceeds Generation Limit,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,43
validation-967,"Each execution of the claim function in the `DevFund.sol` contract, will drain all the contract’s funds. ",,Incorrect assumptions,Unsatisfactory,,43
validation-958,EntityForging::fetchListings Block gas outrage leading to denial of service due to unbounded loop,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,43
validation-949,`mintWithBudget()` will be DoS'ed after 10_000 tokens are minted.,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,43
validation-894,_incrementNextGeneration reverts due to wrong access control,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,43
validation-715,Incorrect value of `defaultNukeFactorIncrease` used in `NukeFund` contract leads to incorrect calculation of `finalNukeFactor`,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,43
validation-333,Precision Loss and Potential Exploit in `DevFund::receive` Function Due to Division Before Multiplication,,remaining is there to capture dust,Unsatisfactory,,43
validation-295,Forge potential is wrongly calculated inside `deriveTokenParameters`,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,43
validation-94,user funds will be  locked in EntityForging contract if user calls EntityForging::forgeWithListed function with excess eth,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,43
findings-189,"In the deployment script, the Uniswap router is used on Sepolia instead of mainnet",,deployTasks.ts is OOS,Unsatisfactory,,43
findings-84,"Setting **generationMintCounts[currentGeneration]** to 0 when incrementing generations, breaks core invariants of the protocol",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,43
findings-78,Users can take advantage of poor randomness used by the protocol,,Low QA on unneededly expensive VRF,Unsatisfactory,,43
findings-53,Wrong check for Golden God entropy value,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,43
validation-1440,Generation Limit During Minting in TraitForgeNft Contract not enforced,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,44
validation-1425,Reentrancy Vulnerability in buyNFT Function,,buy() is nonReentrant,Unsatisfactory,,44
validation-1413,Unauthorised call,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,44
validation-1193,MintWithBudget() will never after 1st Generation has been minted,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,44
validation-928,Inconsistent Use of SafeTransfer for ERC721 Tokens ,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,44
validation-886,Functions Pause and Unpause aren't implemented in any contract,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,44
validation-878, Overpayment Due to Lack of Refund Mechanism in EntityForging::forgeWithListed: Financial Imbalance and User Distrust,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,44
validation-867,`forgePotential` check is incorrect in `listForForging`,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,44
validation-838,Inconsistent setting `startPrice` during `mintToken` Execution.,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,44
validation-753,maxTokenPerGeneration can be bypassed and more tokens than the required can be minted,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,44
validation-669,Missing Pausable Functionality in several Contracts Leading to Inability to Pause and unpause Functions,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,44
validation-556,reentrancy eth,,claim() is nonReentrant,Unsatisfactory,,44
validation-468,Use safeMint instead of mint for ERC721,,Analyzer: [M-3] _safeMint() should be used rather than _mint() wherever possible,Unsatisfactory,,44
validation-465,Attacker can forge nfts using different accounts leading to huge loss to the protocol,,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,44
validation-435,Owner can change the value of `taxCut` without notifying the users.,,Owner is trusted,Unsatisfactory,,44
validation-350,"mintWithBudget is not possible if the number of Tokens exceeds 10,000",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,44
validation-293,Generations can exist without any god NFTs,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,44
validation-199,All Pausable contracts cannot be paused.,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,44
validation-121,[H-1] Incorrect check in `EntityForging::listForForging` function allows forgers with a `forgePotential` of `x` times to forge `x+1` times within a year,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,44
validation-53,whitelist cannot  mint NFT via mintWithBudget() when generation is larger than 1.,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,44
validation-43,Missing Validation Check for Contract Address Parameters,,Low QA on sanity check,Unsatisfactory,,44
validation-7,"TraitForgeNft and various other contracts are expected to be Pauseable, but can never be paused.",validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,44
validation-1465,Loss of rewardDebt since msg.value is used for calculating `amountPerWeight` instead of `balanceOf(address.this)`,,msg.value is ETH with 18 decimals,Unsatisfactory,,45
validation-1300,Missing Initialization Check for `getNextEntropy()`,,Low QA on uninitialized variable,Unsatisfactory,,45
validation-1137,Incorrect `Forge` Limit Check in `EntityForging` Contract,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,45
validation-1114,Modulo Bias in Random Number Generation,,It's being modulated by uint256(10) ** 78,Unsatisfactory,,45
validation-953,Incorrect Forging Count Comparison for Forger Tokens,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,45
validation-823,deriveTokenParameters function incorrectly calculates nukeFactory,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,45
validation-807,Generation Increment Failure Due to Misaligned Contract Ownership,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,45
validation-742,Protocol uses predictable randomness for calculating the Golden God entropy ,,Intended design for users to race grab,Unsatisfactory,,45
validation-608,Contracts inherits from `Pausable` but does not expose pausing/unpausing functionality,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,45
validation-473,TraitForge contracts are intended to be Pausable but they are not,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,45
validation-413,There is no slippage when Nuking the NFT,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,45
validation-390,All the contracts inherited the pausable contract from openzeppelin and most of the functions have whenNotPaused modifier in them but but non of the contracts will be able to be paused because of failure to override the pause and unpause functions in each of the protocol,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,45
validation-308,Users may accidently overpay while forging & the excess remains stuck in the contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,45
validation-292,Gas griefing  is possible on unsafe external call in EntityTrading::buyNFT  function ,,Analyzer: [L-4] External call recipient may consume all transaction gas,Unsatisfactory,,45
validation-243,The allowed caller in `EntropyGenerator` can not be updated,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,45
validation-190,traitToken can be changed after the airdrop has started,,AirDrop.sol is OOS,Unsatisfactory,,45
validation-186,Inadequate Validation for Pseudo-Random Value 999999 in Entropy Generation,validation-154,More than 1 Golden God per generation (Partial credit for not discretely exposing the key issue),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,45
validation-173,`msg.value` is can become stuck inside EntityForging,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,45
validation-91,TraitForgeNft contract cannot increment generations due to the wrong modifier in EntropyGenerator,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,45
validation-63,The rewards for trading could be sent to invalid old address.,,Low QA on sanity check,Unsatisfactory,,45
findings-139,Incorrect validation for forger's forge potential in EntityForging::listForForging,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,45
findings-125,Excess Ether is Not Returned and Will Be Locked Forever,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,45
validation-1431,Predictable Randomness in Entropy Generation,,Low QA on unneededly expensive VRF,Unsatisfactory,,46
validation-1333,Bias in Random Number Generation Due to Modulo Operation,,It's being modulated by uint256(10) ** 78,Unsatisfactory,,46
validation-1326,A `malicious forgerOwner contract` can revert the `forge` transaction inside the `receive` function implemented in the `forgerOwner` contract,,Low QA frequently reported by bots in the past,Unsatisfactory,,46
validation-1321,Incorrect Padding of Entropy Values,,Low QA on padding. No issue entailed here that's dealing with 6 digits,Unsatisfactory,,46
validation-1257,Potential Denial of Service (DoS) by Forger in the forgeWithListed(),,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,46
validation-1208,Multiple contracts are intended to be pausable but aren't,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,46
validation-1179,Potential Overforging Due to Incorrect Boundary Check on `forgingCounts`,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,46
validation-1144,OZ's pause() and unpause() internal function are not exposed via an external function implementation by any of the contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,46
validation-1112,pause/unpause` functionalities not implemented in any pausable contracts.,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,46
validation-1089,NukeFactor Calculation Mismatch,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,46
validation-1085,mintWithBudget will Be DOS after tokenId reaches a certain amount of tokens minted,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,46
validation-1047,`pause/unpause` functionalities not implemented in many pausable contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,46
validation-951,# mintWithBudget() in TraitForgeNft.sol wont work after first generation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,46
validation-815,"`EntityTrading::setNukeFundAddress` function doesn't check and validate it's parameter `_nukeFundAddress` , which will lead to DOS when `EntityTrading::BuyNft`  and `EntityTrading::transferToNukeFund` functions get call.",,Low QA on uninitialized variable,Unsatisfactory,,46
validation-751,Insufficient Golden God prevention check in `EntropyGenerator::writeEntropyBatch1` and `writeEntropyBatch2` allows Golden God to exist in first 2 batches,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,46
validation-628,Various functions cannot be paused as intended on some of the Trait Forge Contracts.,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,46
validation-618,forgeWithListed() is susceptible to frontrun if msg.value > forgingFee.,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,46
validation-584,Price of token is calculated incorrectly while minting,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,46
validation-493,"No `0` address check in `forge` & `_mintNewEntity` , `_mint` strictly requires `to` address to not be 0 address by OZ. Can lead to failure of function in case `newOwner` is `address(0)`. ",,Low QA on address(0) check,Unsatisfactory,,46
validation-469,"In all the three functions calculating entropy for different phases, `writeEntropyBatch1`, `writeEntropyBatch2`, `writeEntropyBatch3`, the generated entropy is not checked against 0(null) value.",,Low QA on zero value check,Unsatisfactory,,46
validation-388,Default value of `NukeFund::ageMultiplier` is 0,,Low QA on owner negligence initializing key variables,Unsatisfactory,,46
validation-371,Forge NFTs can forge 1 more time than their potential,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,46
validation-261,SafeRewardTransfer can be called by any child contract,,Inheritances will be separately independent among the two,Unsatisfactory,,46
validation-242,All funds will go to the owner if the total weight exceeds the amount being sent thereby causing loss to the devs,,msg.value is ETH with 18 decimals,Unsatisfactory,,46
validation-160,The game will not be able to convert from dev owner to DAO owned,,Low QA on doc mismatch,Unsatisfactory,,46
validation-76,Users can buy NFT with desired entropy,,Low QA on unneededly expensive VRF,Unsatisfactory,,46
findings-152,The `initializeAlphaIndices()` function incorrectly uses the `onlyOwner` modifier.,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,46
findings-121,Pause and Unpause are not external functions,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,46
validation-1448,Insecure Private Entropy Slots (Lack of True Privacy for Critical Data),,Low QA on suggesting storing private data offchain,Unsatisfactory,,47
validation-1397,Inconsistent Generation Count Management in Token Forging and Minting which breaks `MAIN INVARIANT ` in `TraitForge.sol`,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,47
validation-1353,Denial of Service (DoS) Vulnerability in the `EntityForging::fetchListings` function,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,47
validation-1335, Improper Validation of Caller and Incorrect Fund Transfer Logic in nuke Function,validation-40,Severe flaw if operator were involved,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L177,47
validation-1243,Predictability in Entropy Generation,,Low QA on unneededly expensive VRF,Unsatisfactory,,47
validation-1231,"`EntropyGenerator::initializeAlphaIndices` has wrong access control, needs `onlyAllowedCaller` as it will be called by the nft contract",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,47
validation-1167,"User can mint the ""Golden God” NFT without any difficulty",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,47
validation-1165,NFT Token cannot be `nuked` even if `minimumDaysHeld` period has been passed.,,Intended design. lastTokenTransferredTimestamp is updated with block.timestamp in _beforeTokenTransfer,Unsatisfactory,,47
validation-960,Incorrect Fee Calculation in Forging Process,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,47
validation-952,Unverified Transfer in cancelListing Function,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,47
validation-748,Tokens can have the same entropy,validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,47
validation-684,Possible to have >10k entities per generations,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,47
validation-660,_incrementGeneration() resets the generationMintCounts resulting in losing track of the number of entities minted in the next generations by forging,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,47
validation-515,`_incrementGeneration` reverts due to access control restriction in `initializeAlphaIndices` ,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,47
validation-490,Incorrect end index calculation in `writeEntropyBatch2` function,,lastInitializedIndex is the starting point of the next batch,Unsatisfactory,,47
validation-372,Users can abuse the code and benefit from a lower wait time until their forging count is reset,,Intended design,Unsatisfactory,,47
validation-204,Inefficient Validation in Entropy Initialization,,Low QA on risky gas optimization,Unsatisfactory,,47
validation-4,Pause/unpause functionalities not implemented in many pausable contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,47
findings-72,Possible gas griefing with external calls,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,47
validation-1372,Writing Entropies in Batches Can Lead to Skilled Users Sniping More Valuable NFTs,,Low QA on unneededly expensive VRF,Unsatisfactory,,48
validation-1347,Users can start forging eventhough the `forgingCounts[forgerTokenId]` exceeds the value of `forgePotential`.,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,48
validation-1129,The admin setting a new airdrop contract will causes the `TFGNFT`s are not burnable,,Owner is trusted,Unsatisfactory,,48
validation-1103,Missing Entropy Padding,,Low QA on padding. No issue entailed here that's dealing with 6 digits,Unsatisfactory,,48
validation-834,Function `writeEntropyBatch*` could be revert because `pseudoRandomValue` could be 999999.,,It's intended to prevent golden god in batches 1 and 2,Unsatisfactory,,48
validation-766,Insecure Storage of Entropy Slots and Indices,,Low QA on suggesting storing private data offchain,Unsatisfactory,,48
validation-625,mintNewEntity() could be DOS'ed for an unknown amount of time. ,,generationMintCounts starts from 0,Unsatisfactory,,48
validation-505,Forging cannot work if there is an influx of mints as the mint generation will be above the parent generation,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,48
validation-414,Off by one error in EntityForging allows users to forge/merge one extra time,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,48
validation-296,Changing contract inside TraitForgeNft will mess up the whole system,,Owner is trusted,Unsatisfactory,,48
validation-152,The `Golden God` is predictable.,,Intended design for users to race grab,Unsatisfactory,,48
validation-104,Incorrect Mint Price Calculation Leading to Potential Overpayment,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,48
validation-93, Division by Zero in `_taxCut`,,Analyzer: [L-3] Division by zero not prevented,Unsatisfactory,,48
validation-92,The contracts can't be paused or unpaused ,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,48
findings-161,"When an approved actor invokes the `NukeFund.nuke()` function, the funds are transferred to the caller rather than the owner of the `tokenId`.",validation-40,Severe flaw if operator were involved,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L177,48
findings-134,"Incorrect check will DoS the mintWithBudget function after the first generation, or possibly even before it",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,48
validation-1410,Overpayment are not begin refunded in `EntityForging::forgeWithListed`,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,49
validation-1404,Inability to Pause or unpause Protocol Due to Missing Overrides in all Contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,49
validation-1275,Nuke factor miscalculation when deriving token parameters,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,49
validation-1272,The `forgePotential` calculation in the `EntropyGenerator.deriveTokenParameters` function is erroneous,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,49
validation-1168,Incorrect `msg.value` Validation in `EntityForging::forgeWithListed` May Lock User Funds Permanently,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,49
validation-942,Potential Front-Running Vulnerability in Nuke Function,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,49
validation-915,Predictable Randomness in Entropy Generation,,Low QA on unneededly expensive VRF,Unsatisfactory,,49
validation-796,Invalid validation stops `TraitForgeNFT::mintWithBudget` from Minting unintentionally,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,49
validation-678,No Slippage Control in `nuke`,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,49
validation-662,Gas griefing  is possible on unsafe external call in EntityForging::forgeWithListed  function,,Analyzer: [L-4] External call recipient may consume all transaction gas,Unsatisfactory,,49
validation-251,EntityForging.sol :: fetchListings() will eventually revert because the increasing number of listings will surpass the block gas limit.,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,49
validation-249,There is No Pause/Unpause Function to Change the State,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,49
validation-120,`mintWithBudget` will not work from gen 2 and onwards,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,49
validation-87,No Method to Withdraw Stuck Ether in `DevFund`,,This will only happen if ETH is received via self destruct,Unsatisfactory,,49
validation-74,NFT can be listed without being buyable,,Low QA frequently reported by bots in the past,Unsatisfactory,,49
validation-20,Missing Declaration of updateDev Function in IDevFund Interface,,Low QA as it's not mandatory,Unsatisfactory,,49
findings-147,Buyers of listings can unexpectedly buy NFTs with used-up forging counts,,Infeasible as Alice's transaction would revert with msg.value == listing.price,Unsatisfactory,,49
validation-1422,Potential Fund Lock and Inconsistent State in `forgeWithListed` Function,,Low QA frequently reported by bots in the past,Unsatisfactory,,50
validation-1360,The mintWithBudget function will be blocked after 1000 NFTs are minted,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,50
validation-1211,Omitted Check For Maximum Generation Count Allows Excessive Minting,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,50
validation-1104,Fee is not calculated as a percentage,validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,50
validation-1042,Rewards can be locked up in DevFund.sol,,info.pendingRewards is updated and is withdrawable later,Unsatisfactory,,50
validation-1017,`lastForgeResetTimestamp` Initialization Delay Incentivizes Early Forging,,Intended design,Unsatisfactory,,50
validation-995,Value of 0 for `entropySlots[]` is not considered and will be adjusted incorrectly,,Insufficient proof alleging the flaw,Unsatisfactory,,50
validation-991, Incomplete Cleanup of listedTokenIds in buyNFT Function,,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,50
validation-956,Inadequate check in listForForging() allows a forger to forge more than he is supposed to,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,50
validation-926,Entropy Values Visible On-Chain,,Low QA on unneededly expensive VRF,Unsatisfactory,,50
validation-752,Lack of Maximum Generation Limit Check During Minting,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,50
validation-650,Incorrect ETH Refund in `nuke` Function,validation-40,Severe flaw if operator were involved,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L177,50
validation-637,mintWithBudget does not work past gen 1 (tokenId > 10000),validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,50
validation-629,The alpha entropy check in batch 1 and 2 during entropy generation is incorrect,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,50
validation-496,"Minting can be done by anyone for free, that inherits the TraitForgeNft contract.",,Incorrect assumptions,Unsatisfactory,,50
validation-492,User can forge the same entropy twice deeming the entropy attribute not unique.,validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,50
validation-447,generationMintCounts is reset to 0 after increment to the next generation which break the invariant that there's no more than 10000 each generation ,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,50
validation-393,Disproportionate Reward Distribution in DevFund Contract  ,,Intended working design,Unsatisfactory,,50
validation-323,Attacker can front run & mint 'golden rod' nft for every generation,,Intended design for users to race grab,Unsatisfactory,,50
validation-176,Forgers have different forging potential than mergers,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,50
validation-107,TraitForgeNFT Contract Fails Due to Access Control Issue in EntropyGenerator Contract,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,50
validation-52,Incorrect Use of tx.origin in startAirdrop Function,,AirDrop.sol os OOS,Unsatisfactory,,50
findings-181,The NFT could be stoled because the approval isn’t revoked,,OZ _update() will handle that,Unsatisfactory,,50
findings-132,"Before minting, the minter can know the NFT's entropy value.",,Low QA on unneededly expensive VRF,Unsatisfactory,,50
findings-55,Forging new tokens is not possible when the maximum tokens per generation is reached,,generationMintCounts starts from 0,Unsatisfactory,,50
validation-1244,Implement Validation Checks for TaxCut & MinimumFee Parameters,,Owner is trusted,Unsatisfactory,,51
validation-1052,Misalignment Between Token ID and Generation in Forged Entities,,Intended design and easy to tell,Unsatisfactory,,51
validation-955,"When NFT is transferred, its allocation in the airdrop contract is not transferred with it.",validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,51
validation-869,players won't be able to mint NFTs using TraitForgeNFT::mintWithBudget function because of invalid validation ,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,51
validation-787, unbounded loop in the `EntityForging::fetchListings` causes DOS to the protocol,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,51
validation-750,User's can accurately predict entropy of the token to be minted next in order to mint more valuable tokens and ultimately to obtain to Golden God NFT,,Low QA on unneededly expensive VRF,Unsatisfactory,,51
validation-599,Missing function to get the `forgingCounts` for a nft can be used by an attacker to deceive buyers,,Intended design,Unsatisfactory,,51
validation-552,TraitForgeNft.sol - `currentGeneration` can be more than `maxGeneration`.,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,51
validation-502,mintWithBudget() will revert after Gen 1 minting is over,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,51
validation-420,NukeFactor calculation and calculateAge is not as documentation intended,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,51
validation-220,TRansfering the NFT doesn not transfer the airdrop amount,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,51
validation-103,Vulnerability to Denial of Service (DoS) in DevFund and NukeFund Contracts,,Commonly known issue on spamming,Unsatisfactory,,51
validation-99,User can lose on gas by calling mintWithBudget() if his budget is enough to lead to a transaction being out of gas,,Budget is user controlled,Unsatisfactory,,51
validation-57,Incorrect forgingCounts process in forge,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,51
findings-187,"If the dev has some pendingRewards leftover, he couldn’t claim once he will be removed",,info.pendingRewards is updated and is withdrawable later,Unsatisfactory,,51
findings-158,The `entropy` may be `999999` for the first two batches.,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,51
findings-52,Overflow in modulo operation introduces bias for entropy values,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,51
findings-23,Inconcistency between forging potential for forgers and mergers,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,51
validation-1427,Denial of Service (DoS) due to delete Operation,,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,52
validation-1416,Users won't be able to mint NFTs using `TraitForgeNFT::mintWithBudget` function,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,52
validation-1351,`nukeFactor` will be always 0 in `deriveTokenParameters` function,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,52
validation-1316,Potential Denial of Service (DoS) by NFT Seller in the buyNFT Process,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,52
validation-1119,Discrepancy between functionality and documentation in `EntityForging::_resetForgingCountIfNeeded`,,Low QA on doc mismatch,Unsatisfactory,,52
validation-1046,Contracts inherits from `Pausable` but does not expose pausing/unpausing functionality,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,52
validation-1036,Dos Of Forge and minToken Function due to missing access control consideration,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,52
validation-1006,Owner is allowed to `set max nuke to any arbitrary` value above 50%,,Owner is trusted,Unsatisfactory,,52
validation-630,"Invalid Validation in  EntityForging.sol::forgeWithListed, which will result in a potential loss for merger  owners",validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,52
validation-536,Incomplete Implementation of Pausable Functionality In Multiple Contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,52
validation-489,Multiple contracts cannot be paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,52
validation-455,Users are uncentivized to mint because of 0 entropy value.,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,52
validation-359,Users will not be able to use `mintWithBudget()` after the first generation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,52
validation-115,Use of `transferFrom` for ERC721,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,52
validation-61,Possible dos when `totalDevWeight` is 0,,Circumvented by (totalDevWeight > 0),Unsatisfactory,,52
validation-21,Cannot mint NFT in batch if `_tokenIds >= maxTokensPerGen`,validation-96,Will not get past generation 1 (Wrong mitigation),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,52
findings-177,_incrementGeneration function will never be executed resulting in the DoS,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,52
findings-129,iscalculation in TraitForgeNFT::mintToken Price Calculation Corner Case,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,52
validation-1337,"The totalDevWeight value is too large or the msg.value value is too small, resulting in loss of precision",,msg.value is ETH with 18 decimals,Unsatisfactory,,53
validation-1219, Preventing multiple listings for the same NFT in listNFTForSale(),,Listed NFT already in custody by the contract,Unsatisfactory,,53
validation-1153,[H-01] Inability to increase generation causing DoS of the contract,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,53
validation-970,"Unfair distribution of the `Golden Gold` entities, with some users receiving none and others receiving more than one.",validation-651,Possibly 0 golden gods in a generation. Also a duplicate of #154,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,53
validation-903,NukeFactor is always 0 due to a wrong calculation,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,53
validation-832,The owner's token can be nuked by approved user.,validation-40,Severe flaw if operator were involved,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L177,53
validation-648,Listing NFT for Sale Without Checking Existing Listings,,Listed NFT already in custody by the contract,Unsatisfactory,,53
validation-543,On Chain Data is not Private ,,Low QA on unneededly expensive VRF,Unsatisfactory,,53
validation-448,"`nuke()` transfers the funds to msg.sender, which can be an operator for `ownerOf(tokenId)`.",validation-40,Severe flaw if operator were involved,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L177,53
validation-128,Minting the first NFT of each gen will only cost `startPrice`,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,53
validation-122,[H-2] Minting will halt after 1st Gen due to DoS because of incorrect access modifier in `EntropyGenerator::initializeAlphaIndices` function,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,53
validation-55,Invariant maxTokensPerGen might be broken,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,53
findings-76,Pausable functionality is not implemented in the protocol,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,53
validation-1256,New generation can not begin minting due to NFT contract being unable to call the EntropyGenerator's initializeAlphaIndices(),validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,54
validation-582,Adding a Minimum Generation Check in TraitForgeNft.sol's `setMaxGeneration` Function,,Low QA on admin input mistake,Unsatisfactory,,54
validation-517,A generation might have more than 1 NFT with an entropy of 999999,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,54
validation-462,"Overpaid ETH not reimbursed or distributed, resulting in locked funds",validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,54
validation-403,Potential stagnation in sales near generation end due to price discrepancy,,Intended design,Unsatisfactory,,54
validation-310,`fetchListings` will not be unusable,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,54
validation-294,Forging can cause the god NFT to be skipped,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,54
findings-146,Users can predict the resulting entropy of minting and forging a new token and game the system,,Low QA on unneededly expensive VRF,Unsatisfactory,,54
findings-100,Missing Maximum Generation Limit Check-in `_incrementGeneration` Function ,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,54
findings-51,Incorrect implementation of the ratio for Forgers and Mergers,,Low QA on doc mismatch,Unsatisfactory,,54
validation-1458,Possible accidental DOS when sending fund to DevFund contract. ,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,55
validation-1205,"`mintWithBudget` cannot be used after generation 1, due to an irrelevant check `_tokenIds < maxTokensPerGen`",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,55
validation-1171,Incorrect Validation Allows Excessive Forging in `EntityForging` Contract,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,55
validation-909,"writeEntropy functions can be called by anyone, which according to the sponsor is wrong",,No threats entailed. Whoever calls waste gas,Unsatisfactory,,55
validation-707,Abstract contract Pausable is inherited but the function to ON or OFF is missed to implement,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,55
validation-657, Contracts that inherit the Pausable contract cannot be paused or un-paused  in case of emergency,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,55
validation-615,"`mintWithBudget` has faulty logic, making users not being able to mint after `tokenId` is larger than `maxTokensPerGen`",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,55
validation-463,"Users will not be able to mintWithBudget() after 10,000 tokens are minted",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,55
validation-418,"EntityTrading.sol does not implement the onERC721Received function, which means it cannot accept NFTs",,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,55
validation-408,Lack of max generation check in EntityForging::listForForging() could lead to that NFT at max generation is listed but no one could merge with it ,,Intended and circumvented by newGeneration <= maxGeneration,Unsatisfactory,,55
validation-378,Forger can list their entity(ies) for more than they are allowed to according to the forgePotential property.,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,55
validation-367,Weak randomness in EnthropyGenerator. sol leads to predictable values,,Low QA on unneededly expensive VRF,Unsatisfactory,,55
validation-352,Users can bypass minimum holding period in `NukeFund::canTokenBeNuked()`,,lastTokenTransferredTimestamp is updated with block.timestamp in _beforeTokenTransfer,Unsatisfactory,,55
validation-54,Zero age for NFTs with entrophy whose last digit is zero,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,55
findings-204,Uniqueness of some different `entropy` are not preserved when calculating `paddedEntropy` in `getEntropy` function,,Low QA on padding. No issue entailed here that's dealing with 6 digits,Unsatisfactory,,55
findings-164,A malicious user can list NFTs that cannot be sold.,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,55
findings-127,"Excess payment in `EntityForging::forgeWithListed` will be stuck in contract, leading to loss of players' funds",validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,55
validation-1390,There is a chance that there is no 999999 entropy NFT in a generation,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,56
validation-1338,`calculateMintPrice()` is called before updating Generation,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,56
validation-1308,"`mintToken()`, `mintWithBudget()`, and `forge()` in the `TraitForgeNft` Contract Will Fail Due to a Wrong Modifier Used in `EntropyGenerator.initializeAlphaIndices()`",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,56
validation-1218,No slippage protection in  `DAOFund.sol` contract,,DAOFund.sol is OOS,Unsatisfactory,,56
validation-1202,"The `lastForgeResetTimestamp` mapping gets first set upon first listing or first forging, not token minting, this results in less forges than expected in first year after token minting",,Intended design,Unsatisfactory,,56
validation-1158,Incorrect Approval checks,,"msg.sender no need be owner. OZ: (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth))",Unsatisfactory,,56
validation-1141,Tokens per Generation Maximum Limit Can Be Bypassed,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,56
validation-726,EntityTrading : `buyNFT` can be purosefully reverted by the seller when the demand for NFT is reached high.,,Low QA frequently reported by bots in the past,Unsatisfactory,,56
validation-530,Weak Randomness and Lack of Uniqueness Check in `EntropyGenerator::writeEntropyBatch1/2/3` function,,Low QA on unneededly expensive VRF,Unsatisfactory,,56
validation-437,Dev Share Will Be Zero If `msg.value` is Less Than `taxCut` Wei,,msg.value is ETH with 18 decimals,Unsatisfactory,,56
validation-431,"`TraitForgeNft.mintWithBudget()` won't be callable after the first 10,000 tokens have been minted",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,56
validation-395,Incorrect Year Duration Calculation,,Low QA on trivial leap year. oneYearInDays can always be set to 366 when needed,Unsatisfactory,,56
validation-341,TraitForgeNft could `burn mint fee` when nuke fund contract is not set,,Low QA on address(0),Unsatisfactory,,56
validation-221,Miss slippage protection for amountMinted in mintWithBudget.,,Prices will be incrementally increased as expected,Unsatisfactory,,56
validation-119,More than `maxTokensPerGen` NFTs can be minted,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,56
findings-182,"mint is used instead of safeMint, which is risky, because the assets could be locked",,Analyzer: [M-3] _safeMint() should be used rather than _mint() wherever possible,Unsatisfactory,,56
findings-104,TraitForgeNft.mintWithBudget doesn't work from Gen 2,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,56
validation-1445,The `paddedEntropy` returned for `entropy` with less than 6 digits from the `slotValue`  will always have `age = 0`,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,57
validation-1354,Pause and unpause functions are inaccessible,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,57
validation-1352,Multiple Listings with Different Prices for the Same Token,,Listed NFT already in custody by the contract,Unsatisfactory,,57
validation-1345,Aging process is much slower than it's documented,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,57
validation-1310,Bad actors can take advantage of the predetermined generation of entropy,,Low QA on unneededly expensive VRF,Unsatisfactory,,57
validation-1206,The `merger (msg.sender)` will lose the excessive funds sent to the `EntityForging.forgeWithListed` function call,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,57
validation-1013,"[M-01] State variables not being updated in `cancelListing` function in `EntityTrading` contract, causing misinformation about the NFTs in the protocol",,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,57
validation-1005,[H-01] Overflow in three `EntropyGenerator` functions due to miscalculation in `unchecked` block.,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,57
validation-963,Inconsistent Forge Potential Calculation Between EntropyGenerator and EntityForging Contracts,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,57
validation-961,Generation cannot be incremented due to access control issue,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,57
validation-866,Denial of Service (DoS) Vulnerability in the EntityForging::fetchListings function because of unbounded loop,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,57
validation-842,"`EntropyGenerator::writeEntropyBatch3` allows Golden God (999999) to exist in the slots, conflicting with the invariant: `1 Golden God per gen`",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,57
validation-826,"`TraitForgeNft::_incrementGeneration` resets the `generationMintCounts` allowing more than 10,000 entities per generation due to the fact that via forging entities were minted for further generations",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,57
validation-824,No check for `currentGeneration` exceeding max generations in `TraitForgeNft::_incrementGeneration` allows multiple generations to exist exceeding the limit,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,57
validation-758,Almost all contracts in the protocol inherits `Pausable` contract but missing `pause` and `unpause` implementations,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,57
validation-722,"cancelListing has whenNotPaused, which prevents the seller from getting back his NFT in case of a pause action",,Intended design,Unsatisfactory,,57
validation-640,The claimAmount from the nuke action may not go to the NFT owner,validation-40,Severe flaw if operator were involved,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L177,57
validation-514,"Weak prng in initializeAlphaIndices, writeEntropyBatch(1,2,3).",,Low QA on unneededly expensive VRF,Unsatisfactory,,57
validation-472,Unchecked Max Generation Limit Allows Infinite NFT Minting,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,57
validation-406,Burn ETH if contract ownership has been renounced,,Low QA on address(0),Unsatisfactory,,57
validation-334,Incorrect Mint Price Calculation will lead to Financial Discrepancies for Users (`TraitForgeNft::calculateMintPrice`),validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,57
validation-137,Possibility of adding a develloper with the zero address to the DevFund contract,,Low QA on address(0) check,Unsatisfactory,,57
validation-37,DevFund.sol :: receive() always results in a remaining amount of zero due to an incorrect calculation making it impossible for the owner to receive any ether being stuck in the contract.,,Dust will be there from truncation,Unsatisfactory,,57
findings-131,PseudoRandomValue can be max 77 digits instead of 78,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,57
validation-1235,Excessive Fee Not Returned to User in `forgeWithListed` Function,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,58
validation-1227,Precision Loss in Entropy Calculation,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,58
validation-1015,Buying NFT can fail.,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,58
validation-904,"Different nukeFactor calculation, misunderstanding of the nuke factor entity parameter",validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,58
validation-870,Inability to Pause or unpause Protocol Due to Missing Overrides in all Contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,58
validation-865,"The ""Golden God"" can exist in the first 2 passes which breaks the protocol invariant",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,58
validation-864,"`pause` / `unpause` functionality is not implemented in DevFund, EntityTrading, EntropyGenerator, NukeFund, EntityForging, and TraitForgeNft contracts",validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,58
validation-626,Increment of generation need intervention from the owner to be fullfilled ,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,58
validation-534,No Prevention of Multiple Calls in `EntropyGenerator::writeEntropyBatch1/2/3` can Lead to Dos,,Circumvented by lastInitializedIndex < batchSize1,Unsatisfactory,,58
validation-417,EntityTrading.sol imports ERC721URIStorage but does not inherit it,,Low QA on optional inheritance,Unsatisfactory,,58
validation-354,Generations aren't restricted to 10,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,58
validation-260,Unsafe ERC721 minting,,Analyzer: [M-3] _safeMint() should be used rather than _mint() wherever possible,Unsatisfactory,,58
validation-90,Approval for NFT transfers is not removed after transfer,,Will be taken care of by _update(),Unsatisfactory,,58
validation-30,Excess ETH can be sent to the contract and there is no mechanism to withdraw it. ,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,58
validation-1382,Using `EntityForging::forgeWithListed` function users can get more than 10000 NFTs in a generation,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,59
validation-1246,The `forgerOwner` of the `tokenId` being listed for forging can always revert the call `forgeWithListed()` invoked by the `merger` and similarl case for `seller` of the `entity` being listed for sale can always revert the call `buyNFT()` invoked.,,Low QA frequently reported by bots in the past,Unsatisfactory,,59
validation-1232,Multiple Golden Gods possible due to incorrect validation,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,59
validation-1176,The `TraitForgeNft.mintWithBudget` function can only `batch mint` the `TraitForgeNfts` of the first generation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,59
validation-1059,The total eth expected from minting gen 1 is way higher than expected,,Trivial change in expected amount,Unsatisfactory,,59
validation-1027,Insecure Internal Function Access in DevFund.sol,,Inheritances will be separately independent among the two,Unsatisfactory,,59
validation-950,Incorrect Access Control in `EntropyGenerator:initializeAlphaIndices`,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,59
validation-829,Lingering token approvals in `EntityTrading` and `NukeFund` may lead to unauthorized transfers of NFTs,,Will be taken care of by _update(),Unsatisfactory,,59
validation-764,Incorrect mint price is applied if there is a generation increment ,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,59
validation-709,Loss of Forged Entity Counts During Generation Transition in TraitForgeNft Contract,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,59
validation-632,Possibility that there will be no best '999999' entropy,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,59
validation-610,A generation can have more than the maximum of 10_000 NFTs,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,59
validation-488," `mergerEntropy` must be greater than 10 and exactly divisible by 10 otherwise, it can lead to precision loss and `forgeWithListed` function can give unexpected results.",,Intended to extract the 5th digit from the entropy,Unsatisfactory,,59
validation-412,Pausable functionality is not exposed in all contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,59
findings-49,Forge potential allows forging different number of tokens depending on gender,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,59
findings-5,"Potential front-running vulnerability in `NukeFund::nuke`, leading to players not getting funds as intended",findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,59
validation-1330,Excess ETH FUND will get stuck inside EntityForging Contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,60
validation-1252,Over-forging Due to Incorrect Check and Increment Order in `forgeWithListed` and `listForForging` Function,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,60
validation-1143,Token Minting Beyond Intended Limits Due to Generation Reset Issue,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,60
validation-1019,Users can claim airdrop even if they do not hold the nft they initially minted. Also the new owner can burn the token depriving the original owner of the airdrop. ,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,60
validation-810,"Two ""golden gods"" can exists in one generation",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,60
validation-510,_incrementGeneration() doesn't check if the incremented generation is <= maxmaxGeneration,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,60
validation-216,[H-4] `EntropyGenerator::getNextEntropy` assigns two NFTs of different generations with the same entropy,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,60
validation-201,Users have no choice but to pay more to mint the first NFT of the next generation.,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,60
validation-189,Missing access control in an internal function,,Inheritances will be separately independent among the two,Unsatisfactory,,60
validation-144,Entropy data is deterministic and publicly known,,Low QA on suggesting to opt for off chain storage,Unsatisfactory,,60
validation-124,[M-1] Two NFTs can have the same entropy through forging,validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,60
validation-110,The claimable nuke funds of a NFT could exceed `maxAllowedClaimAmount`,findings-165,Missing slippage to protect against front-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,60
findings-194,Calling `mintToken` function can cause user to pay a higher amount than what he should pay for minting first NFT for a new generation that is not first generation,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,60
findings-170,The remaining funds after the last nuking will be frozen.,,Incorrect assumptions. Remaining fund is meant to be nuked by the next caller,Unsatisfactory,,60
findings-96,initializeAlphaIndices uses an incorrect modifier,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,60
findings-40,GenerationMintCounts calculation error,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,60
validation-1156,"Generation Token Count Exceeds 10,000 Limit Due to Forging Reset",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,61
validation-1078,Entropy Calculation Error,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,61
validation-1050,A user after selling his nft can lose his airdrop. This is an issue with the nft contract airdrop reduce on burn,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,61
validation-883,Off-by-one error in `forgePotential` limit check.,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,61
validation-743,defaultNukeFactor increase is setup incorrectly,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,61
validation-733,Incorrect `forging limit` check inside the `EntityForging::listForForging` allows a forger to list their NFT additional 1 more time than allocated every year.,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,61
validation-614,"There can be more than one 999,999 entropy entity per generation",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,61
validation-560,EntityForging.sol:forgeWithListed( ) will revert and Users May Be Unable to Forge Tokens Due to  incrementing before checks,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,61
validation-512,`mintWithBudget()` will not work after minting has been completed for generation 1,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,61
validation-356,An approved party can cancel a listing despite the require statement,,Circumvented by (nftContract.ownerOf(tokenId) == msg.sender || msg.sender == address(nftContract),Unsatisfactory,,61
validation-321,"`mintWithBudget()` won't mint tokens after `generation 1 ` is being incremented , because of wrong condition in while loop",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,61
validation-284,Incorrect Calculation of Pending Rewards in `updateDev` Function,,Makes no difference. The intent is to have old value of info.weight taken care of prior to new update,Unsatisfactory,,61
validation-11,Many pausable contract is not pausable because the external 'pause/unpause' function is not implemented,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,61
findings-172,Users' ability to nuke will be DoSed for three days after putting NFTs up for sale and cancelling the sale,,Intended design,Unsatisfactory,,61
findings-143,setMaxGeneration has insufficient validation,,Low QA on input mistake by the owner,Unsatisfactory,,61
findings-136,Last generation NFTs cannot be used for forging,validation-1045,Forging limitation on old parent generation (Could be intended for the last generation),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,61
validation-1426,"No limit on the minimum fee, which can bypass the contribution fee",,msg.value is ETH with 18 decimals,Unsatisfactory,,62
validation-1128,Tokens can be nuked earlier than expected,,lastTokenTransferredTimestamp is updated with block.timestamp in _beforeTokenTransfer,Unsatisfactory,,62
validation-1121,TraitForgeNft:isForger( )  will always  return true for any given token ID,,Incorrect assumptions. roleIndicator == 0 isn't true always,Unsatisfactory,,62
validation-812,ETH can get stuck on the DevFund,, info.pendingRewards is updated and claimable later,Unsatisfactory,,62
validation-771,In TraitForgeNft.sol generation limit can be bypassed,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,62
validation-705,mintWithBudget() wont work after first generation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,62
validation-644,"User's Excess ETH Not Refunded in `forgeWithListed` Function, Causing Fund Loss",validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,62
validation-574,nadequate Validation of `maxGeneration` in the Function `_incrementGeneration` in `TraitForgeNft.sol`,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,62
validation-252,Map entry deletion may result in incorrectly deleted listing,,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,62
validation-142,Incorrect validation check allows Golden God entropy to be minted multiple times,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,62
findings-169,The `EntityForging.forgeWithListed` function doesn't refund remaining `Eth` to the caller.,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,62
findings-122,Economic Gain Exploiting PseudoRandom,,Low QA on unneededly expensive VRF,Unsatisfactory,,62
findings-58,Approved operators can cancel forging requests without transferring the NFT,,Insufficient proof alleging the flaw,Unsatisfactory,,62
validation-1409,Minting towards the end of each generations is highly unfeasible for the users.,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,63
validation-1294,"Lack of listing update functionality, may allows users sell their Entities at a loss",,Intended design. Seller can always cancel and relist,Unsatisfactory,,63
validation-1194,The `pseudoRandomValue != 999999` check in the `EntropyGenerator.writeEntropyBatch1` function is erroneous,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,63
validation-1079,Nuke factor calculated much slowly than it should,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,63
validation-1011,The `TraitForgeNft.sol::_distributeFunds` function will send Ether to an arbitrary address if the `nukeFundAddress` is not set.,,Low QA on address(0) check,Unsatisfactory,,63
validation-874, Critical Ownership Mismatch Prevents `TraitForgeNft` from Advancing Generations,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,63
validation-635,NFTs can be minted beyond more than maximum generation due to missing validation in TraitForgeNft.sol::_mintInternal(),validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,63
validation-595,Comparing `_tokenIds` to `maxTokensPerGen` in `TraitForgeNft::mintWithBudget` denies user this service for future generations after the first generation.,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,63
validation-518,Unchecked currentGeneration count in `_incrementGeneration` ,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,63
validation-507,Incorrect Fund Allocation Based on Airdrop Status in Fallback Function,,Intended design. Low QA on uninitialized DAO Fund address,Unsatisfactory,,63
validation-454,TraitForgeNft can mint more generations than allowed,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,63
validation-379,Minted Generation 2 to Generation 10 Entity(ies) exceeds 10000 per generation due to accounting error in `TraitForgeNft::_incrementGeneration()`,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,63
validation-206,Claim amount on Nuke should go only to NFT Token owner,validation-40,Severe flaw if operator were involved,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L177,63
validation-44,Lack of refund mechanism for overpayment in `EntityForging::forgeWithListed`,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,63
findings-151,Incorrect Initialization of `generationMintCounts` in `TraitForgeNft::_incrementGeneration` Function,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,63
findings-92,Users can mint more NFTs per generation because generationMintCounts gets reset,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,63
findings-91,"EntityForging::forge() is too restrictive, resulting in users receiving less rewards than they should",validation-1375,Trivial change to stem yearly leak (Partial credit for not dicretely exposing it),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,63
findings-86,Miscalculating on the next generation leads to more entities than desired,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,63
validation-1470,Pausing contract functionality does not work,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,64
validation-1339,Users will lose their money if they don't nuke their Entity on time,findings-165,Missing slippage to protect against front-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,64
validation-1248,It's possible that `Golden God` NFT might never be minted due to how `slotIndexSelectionPoint` is chosen.,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,64
validation-934,Potential for Incomplete Initialization of Entropy Slots,,Low QA on uninitialized variable,Unsatisfactory,,64
validation-816,`pause/unpause` related functionalities are not implemented,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,64
validation-805,The `EntityTrading::listNFTForSale` function is missing a check for already listed NFTs,,Listed NFT already in custody by the contract,Unsatisfactory,,64
validation-757,_incrementGeneration() function in TraitForgeNft.sol will always revert ,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,64
validation-725,deriveTokenParameters() calculates wrong parameter values,validation-170,Could round to 0 e.g. when entropy is 999999. This report has a second issue to be deduped to #295,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,64
validation-331,Weak Pseudo-Random Number Generation in `EntropyGenerator` contract,,Low QA on unneededly expensive VRF,Unsatisfactory,,64
validation-254,Unsafe ERC721 transfer,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,64
validation-215,A token can be forged more times than its forgePotential.,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,64
validation-214,Contracts that inherit the Pausable contract do not expose pause/unpause.,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,64
validation-109,Forgers can forge one additional time beyond their forge potential for every token,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,64
validation-50,Exceeded forge for forger NFTs,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,64
findings-130,User about to nuke can be front-runned and burn their NFT for far less ETH than expected ,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,64
findings-108,TraitForge contracts inherit from `Pausable` but does not expose pausing/unpausing functionality,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,64
findings-74,Anyone can front-run `nuke` function,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,64
findings-24,"Users can know the location of the good and bad NFTs, so they can decide when they want to mint",,Low QA on unneededly expensive VRF,Unsatisfactory,,64
findings-10,"Several functions in the TraitForge protocol implement the whenNotPaused modifier, however there is no way to pause and unpause the contracts",validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,64
validation-1341,# Rounding Errors Cause DevFund Donations To Be Stolen By Owner,,msg.value is ETH with 18 decimals,Unsatisfactory,,65
validation-1332,Users can mint more than the forging capacity due to an incorrect check,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,65
validation-1262,The `EntropyGenerator.writeEntropyBatch3` function does not check for the `entropy value 999999` which is a wrong logic implementation,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,65
validation-1054,"Missing maximum generation validation in `TraitForgeNft#mintToken`, which allows users to mint `TFGNFT` over `maxGeneration`",validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,65
validation-897,Users can know in advance what will be the entropy value and the stats of the next NFT to mint.,,Low QA on unneededly expensive VRF,Unsatisfactory,,65
validation-712,Check for 'Golden God' entropy is wrong,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,65
validation-545,Lack of slippage protection in `nuke` function,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,65
validation-381, Inability to Increment Generation even when generationMintCounts[gen] >= maxTokensPerGen During Forging Process in TraitForgeNft Contract.,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,65
validation-166,Violation of Max Cap Per Generation,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,65
findings-168,The overflow in `EntropyGenerator.sol` will affect the claim amount in `NukeFund.nuke()`.,,Low QA on unchecked,Unsatisfactory,,65
findings-48,Amount claimed on `nuke` can be different than expected when `finalNukeFactor > nukeFactorMaxParam`,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,65
validation-1432,Zeroing count of next generation counter,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,66
validation-1421,Invalid checking in `TraitForgeNft::_mintNewEntity` of currentGeneration Prevents Proper Generation Advancement doing forging process,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,66
validation-639,For every generation greater than 1 there is possibility that no '999999' entropy appear,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,66
validation-607,Funds can get stuck when calling EntityForging::forgeWithListed(),validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,66
validation-578,Insufficient validation of `maxGeneration` in `TraitForgeNft.sol#_incrementGeneration()` function.,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,66
validation-421,Money flow in receive() fallback function in DevFund is incorrect,,Doing this will have remaining stuck in the contract,Unsatisfactory,,66
findings-180,"More than 10,000 NFTs per generation can be minted",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,66
findings-175,NFTs with entropy set to 999999 can occur where they are not wanted,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,66
findings-64,Flawed `mintWithBudget` function will cease to work when 10k NFTs has been minted in generation one,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,66
validation-1412,Users not begin able to mint current Generation NFTs if they `forgeWithListed` to get 10000 new forged Nfts of the next Generation,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,67
validation-1138,In `EntityTrading::buyNFT()` the seller can gas grief the buyer.,,Analyzer: [L-4] External call recipient may consume all transaction gas,Unsatisfactory,,67
validation-913,`EntityForging::listingCount` does not reduce when canceling,,Intended design,Unsatisfactory,,67
validation-877,`EntityTrading` contract not implemented IERC721Receiver ,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,67
validation-459,Inconsistent state in `listedTokenIds` mapping when canceling listings,,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,67
validation-155,Entropy padding will result in an unfair forge potential distribution,,Low QA on padding. No issue entailed here that's dealing with 6 digits,Unsatisfactory,,67
validation-3,"Forging an NFT doesn’t sent back left over ETH, which would be stuck in the contract EntityForging.sol ",validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,67
findings-116,EntityForging.listForForging allows more forging than intended,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,67
validation-1225,Minting Halted After Generation Increment Due to Access Control on initializeAlphaIndices(),validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,68
validation-943,Incorrect implementation of calculateNukeFactor() results in unfair fund distribution,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,68
validation-930,Users can deliberately revert transactions if the entropy they get is not good enough for them,,nonReentrant is there to thwart the exploit,Unsatisfactory,,68
validation-19,Protocol Contracts does not have access to pause and unpause functionality,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,68
findings-167,Calling the `TraitForgeNft.mintWithBudget` function is only available for `Gen 1`.,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,68
validation-1336,The `EntityForging.setTaxCut` function can be called to update the `taxCut` amount even when the `EntityForging` contract is paused thus incurring loss of funds on the `forgerOwner`,,Owner is trusted,Unsatisfactory,,69
validation-848,NFT could be listed for sale then nuked,,Will be taken care of by _update(),Unsatisfactory,,69
validation-677,Minting Will Fail When Generation Needs To Be Incremented Due to Access Control Issue,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,69
validation-494,lastForgeResetTimestamp in EntityForging does activate when mint like what documentation stated,,Intended design,Unsatisfactory,,69
validation-428,NukeFund doesn't set ageMultiplier,,Low QA on owner negligence initializing key variables,Unsatisfactory,,69
validation-362,Users pay the wrong amount of ETH when minting an NFT in a certain case,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,69
validation-286,Excess funds are locked in the contract EntityForging.sol,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,69
validation-125,`_mintInternal` will mint next generation NFT for previous generation price,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,69
validation-96,Wrong minting logic based on total token count across generations,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,69
validation-81,Minting tokens will be impossible when `generationMintCounts` cap is reached for the first generation,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,69
findings-165,There is no slippage check in the `nuke()` function.,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,69
findings-77,`The Golden God` can be created in the first and the second batch,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,69
validation-1376,Multiple Nfts can be minted with 999999 entropy,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,70
validation-1358,Entropy of a NFT can be zero,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,70
validation-1234,"In `EntropyGenerator::getEntropy` there is a high chance of `entropy` being zero for an NFT due to precision loss, particularly if a tokens `numberIndex == 0` ",,Similar to Analyzer: [L-8] Loss of precision,Unsatisfactory,,70
validation-1217,Excess assets sent to `EntityForging::forgeWithListed()` will be locked in the contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,70
validation-1108,Golden God Entropy Placement,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,70
validation-744,"Increment generation won't work due to wrong function modifier, which reverts operation. ",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,70
validation-690,Burning a purchased/transferred NFT by the new owner reduces initial owner's airdrop amount.,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,70
validation-570,Approved users can steal NFT owner' nuke funds.,validation-40,Severe flaw if operator were involved,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L177,70
validation-451,Inconsistent state in `buyNFT` function due to incomplete mapping deletion,,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,70
validation-301,An NFT's owner could be unfairly parted away from their tokens,,Intended design,Unsatisfactory,,70
validation-273,User's Airdrop is amount not updated after is traded,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,70
findings-188,Deployer loose at least 100$ of the fees upon deployement,,Low QA and inconsequential on L2 and Solana,Unsatisfactory,,70
findings-112,Mergers can lose funds or get stuck if they send more than the listing fee during forging,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,70
validation-1401,Ownership Mismatch Prevents `TraitForgeNft` from Advancing to next Generations,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,71
validation-1391,Incorrect timestamp assignment to `lastForgeResetTimestamp` in `EntityForging::_resetForgingCountIfNeeded` leads to disturbed accounting of forge potential,,Intended design,Unsatisfactory,,71
validation-1282,Incorrect Derivation of Token Parameters Leading to Miscalculated Forge Potential and Nuke Factor,validation-170,Could round to 0 e.g. when entropy is 999999. This report has a second issue to be deduped to #295,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,71
validation-589,Potential for Multiple 'GoldenGod' Entities,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,71
validation-487,Using erc721 `transferFrom` instead of `safeTransferFrom` may cause the user's nfts to be frozen in a contract that doesn't support erc721.,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,71
validation-374,[H-1] Inability to Pause or Unpause Critical Contract Functions,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,71
validation-147,Access Control Conflict: EntropyGenerator Contract's `onlyOwner` Modifier Conflicts with TraitForgeNft Contract Integration,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,71
findings-140,Reaching the generation mint limit will DoS the forging of tokens from the previous generation,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,71
findings-124,It is Possible to Forge More Than Expected,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,71
findings-67,Users might bypass the minimum holding time (minimumDaysHeld).,,Risky collaboration,Unsatisfactory,,71
validation-1430,All the contracts are pausable but none can be paused/unpaused by the contract owner.,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,72
validation-1319,The protocol will be DoS because no one will want to mint tokens because of the huge mint price,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,72
validation-1124,The expected maximum price of NFT per generation is never reached.,,Trivial issue already known to the protocol team,Unsatisfactory,,72
validation-836,Miscalculation in the `calculateMintPrice` function and allowing tokens to be minted at a lower price than intended.,validation-1379,The unlucky generation transition price (Partial credit as report says the other way round),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,72
validation-762,_mintInternal() function does not check if the currentGeneration has reached the maxGeneration limit before calling the _incrementGeneration() ,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,72
validation-718,Unexpected Behavior During NFT Purchase on Marketplace May Result in Fee Loss,,Low QA on user mistake,Unsatisfactory,,72
validation-576,Incorrect initialization of `generationMintCounts` in function `TraitForgeNft.sol#_incrementGeneration`.,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,72
validation-434,mintWithBudget() will be DOS'ed whenever users mint/forge more than 10_000 tokens,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,72
validation-346,Visible `currentNumberIndex` and `currentSlotIndex` Compromise Upcoming Entity's Entropy,,Low QA on suggesting to opt for off chain storage,Unsatisfactory,,72
validation-344,Users can bypass forging limits due to incorrect reset mechanism (`EntityForging::_resetForgingCountIfNeeded`),,Intended design,Unsatisfactory,,72
validation-342,Lack of Generation Limit Check May Lead to Unexpected Behavior (`TraitForgeNft::_incrementGeneration`),validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,72
validation-146,Divisor overflow will result in remainders with less than 78 digits,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,72
validation-135,TraitForgeNft:mintToken() will revert if normal users triggers an increase in generation,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,72
validation-51,Incorrect price calculation for edge case,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,72
findings-137,"Frontrunning minting of tokens can result in unexpected increased cost for the user, especially when minting in batches",,Prices are incrementally expected,Unsatisfactory,,72
findings-65,The nuke function lacks slippage protection.,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,72
validation-1276,User cannot nuke NFT after `minimumDaysHeld` if user `listNFTForSale` and `cancelListing` of NFT,,Intended design. lastTokenTransferredTimestamp is updated with block.timestamp in _beforeTokenTransfer,Unsatisfactory,,73
validation-1145,The lack of check for max generation reached allows for the creation of infinite generations.,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,73
validation-1004,EntropyGenerator's initializeAlphaIndices uses wrong modifier,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,73
validation-935,Ownable modifier won't allow to execute function,validation-1048,Inadequate control over AirDrop.sol ,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,73
validation-756,User will not be able to mint new entity if parents generation is old,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,73
validation-522,Incorrect token minting condition in `mintWithBudget` function,validation-96,Patial credit for not addressing minting will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,73
validation-456,`TraitForgeNft._incrementGeneration()` resets the mint count of a given generation.,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,73
validation-158,Nuke fund wrongly allocates fees,,Low QA on doc mismatch,Unsatisfactory,,73
validation-138,Overpayment of ETH is not refunded for mergers when they call forgeWithListed(),validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,73
findings-174,Allocated Airdrop amount won't be assigned to buyer,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,73
findings-133,The getNextEntropy() function can access uninitialized entropySlots.,,Low QA on uninitialized variable,Unsatisfactory,,73
validation-1388,`EntityTrading::buyNft` when called by a buyer is pushing the funds to EOA or contract of NFT seller instead of letting them pull their funds,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,74
validation-976,DevFund Contract: Denial of Service (DoS) Vulnerability,,No array entailed here,Unsatisfactory,,74
validation-573,"When an approved actor nukes an entity, the NFT owner will lose Nuke funds.",validation-40,Severe flaw if operator were involved,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L177,74
validation-225,Miss slippage protection in nuke,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,74
validation-167,Everytime a forging occurs excess msg.value is not reimbursed to merger,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,74
validation-32,Uninitialized variable renders all nuke amounts to 0 and burns the NFT,,Low QA on owner negligence initializing key variables,Unsatisfactory,,74
findings-123,Poisoning the Frontend with Failing Forges and Listings,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,74
validation-1406,Address is not wrap inside `payable` keyword when sending funds.,,Unneeded in low level call,Unsatisfactory,,75
validation-899,Incorrect tax fee calculation when tax rate is different than 10%,validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,75
validation-768,Adding an incorrect dev address leads to funds being stuck with no way to recover them,,Low QA on admin input mistake,Unsatisfactory,,75
validation-389,"`TraitForgeNft::_mintNewEntity:: _incrementGeneration(); will never run doing forging, due to invalid validation in _mintNewEntity function.",validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,75
validation-380,Incorrect check in `EntropyGenerator::writeEntropyBatch1()` and `EntropyGenerator::writeEntropyBatch2()` would result in the occurrence of more than one Golden God entity.,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,75
validation-316,Aging will be too slow,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,75
validation-60,Invariant maxTokensPerGen might be broken,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,75
findings-166,There is no slippage check in the `mintWithBudget()` function.,,Prices are incrementally expected,Unsatisfactory,,75
findings-150,"In the `TraitForgeNft.mintToken()` function, the calculation of the mint price is performed before calling `_incrementGeneration`, which could lead to incorrect price.",validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,75
findings-117,fetchListings() will become unusable after a certain point,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,75
findings-85,Validation for golden god entropy is not sufficient ,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,75
validation-1223,"Checking for ""golden god"" entropy is incorrect in the entropyGenerator contract",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,76
validation-982,"Lack of currentGeneration checks in `TraitForgeNft` contract, severe disruption of protocol's functionality, anyone can mint after maxGeneration also",validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,76
validation-938,Lack of Access Control for Batch Writing of Entropy,,No threats entailed. Whoever calls waste gas,Unsatisfactory,,76
validation-831,Using 'forgeWithListed' does not provide a refund for any excess amount.,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,76
validation-755,initializeAlphaIndices() can't be called by the NFT contract since its onlyOwner,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,76
validation-609,Precision Loss in calculateAge Function,validation-471,Partial for not addressing key issue leading to likely significant precision deviation entailed,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L118-L133,76
validation-1267,Mishandling of  `generationMintCounts` in`_incrementGeneration` function,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,77
validation-1189,Off-by-one error in `EntityForging::listForForging`,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,77
validation-888,wrong condition and calculation in getNextEntropy,,Working as intended,Unsatisfactory,,77
validation-875,Nuke transactions can be frontrunned and result in significantly lower reward for users,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,77
validation-546,Incorrect Access Controls ,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,77
validation-481,A Malicious User Could Pre-calculate entropy to Get Desired NFT,,Low QA on unneededly expensive VRF,Unsatisfactory,,77
validation-429,User might loose NFT while Listing/Buying/Canceling because return value is not checked,,Similar to Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,77
validation-325,Incorrect Batch Initialization can lead to Out-of-Bounds Writes (`EntropyGenerator::writeEntropyBatch1`),,lastInitializedIndex is the starting point of the next batch,Unsatisfactory,,77
validation-123,"[H-3] `TraitForgeNft::_incrementGeneration` resets the `generationMintCounts[currentGeneration]` to `0`, causing more than 10000 NFTs of the future generations to be minted",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,77
validation-77,Incorrect Calculation of Mint Price When Mint Count Equals Max Tokens Per Generation,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,77
validation-27,"miss calculation of the age of a token in `NukeFund::calculateAge` function, resulting in getting the wrong token age",,Insufficient proof alleging the impact. QA at best,Unsatisfactory,,77
findings-63,Moving to the next generation will fail because of the `onlyOwner` modifier in the `EntropyGenerator` contract,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,77
validation-1361,Inconsistent implementation of refund policy leads to loss of funds for users,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,78
validation-946,Unbounded Loop in fetchListings Function,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,78
validation-912,`taxCut` rate can be arbitrarily modified by the owner and the new rate will apply to all existing forge and sale listings.,,Owner is trusted,Unsatisfactory,,78
validation-893,Users Unable to Mint NFTs Using TraitForgeNFT::mintWithBudget Function due to a logical error,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,78
validation-697,Incorrect Amount Limit in `mintWithBudget`,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,78
validation-567,Users suffer due to incorrect check.,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,78
validation-532,Lack of Uniqueness Check in writeEntropyBatch1,validation-154,More than 1 Golden God per generation (Partial credit for not discretely exposing the key issue),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,78
validation-527,TraitForgeNft doesn't implement all of Airdrop's onlyOwner functions,validation-1048,Inadequate control over AirDrop.sol ,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,78
validation-161,Race condition in `cancelListing`,,Insufficient proof alleging the flaw. It's atomic,Unsatisfactory,,78
findings-157,Incorrect verification on the `forgePotential` of the forger token,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,78
validation-1334,Contracts cannot handle ` taxCut ` of 0,,Owner is trusted,Unsatisfactory,,79
validation-1220,Users will loose Funds when nuking due to rounding error during calculations,validation-471,Likely significant precision deviation entailed,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L118-L133,79
validation-1170,`mintWithBudget` function will not work after 10000 NFTs minted due to `_tokenIds` in while loop ,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,79
validation-1030,The `999999` Constraint Can Not be Guaranteed,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,79
validation-383,Missing check for `maxGeneration` allows to mint nfts bypassing the threshold,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,79
validation-168,There can be more than 1 god NFTs per generation,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,79
validation-18,Burn NFT Before Sending Fund,,It's atomic,Unsatisfactory,,79
findings-145,Uninitialised parameter can harm users who nuke(),,Low QA on uninitialized variable,Unsatisfactory,,79
validation-1398,Excess Eth During Forging is Lost,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,80
validation-1396,The wrong price is calculated when a user mints the first token of the new generation,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,80
validation-1379,First minted token of a new generation  is minted at an inflated price,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,80
validation-1378,Mishandling of `forgingCounts` reset in `_resetForgingCountIfNeeded`,,Intended design,Unsatisfactory,,80
validation-1154,[M-01] Denial of Service of `TraitForgeNft.sol:mintWithBudget` when current generation is > 1,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,80
validation-979,EntityTrading.sol:buyNFT( ) does not  check if tokenID is valid before purchasing,,Token is under the contract custody,Unsatisfactory,,80
validation-749,Prevention of early generation of the GoldenGod in EntropyGenerator.sol is not working.,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,80
validation-716,EntityForging - forgeWithListed : excess ETH neither utilized not refunded,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,80
validation-577,Incorrect validation in `TraitForgeNft.sol#mintWithBudget`,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,80
validation-511,Wrong use of OnlyOwner modifier will DoS the whole protocol forever and prevent minting of tokens of new generation,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,80
validation-347,Malicious actors can bypass forging limits in `EntityForging::forgeWithListed()`,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,80
validation-72,Precision loss in reward calculation leading to incorrect distribution and leakage of funds,,msg.value is ETH with 18 decimals,Unsatisfactory,,80
validation-1175,Method ForgeWithListed in EntityForging doesn't refund excess Eth send to it as fee,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,81
validation-183,Early devs receive more funds compared to the devs added later despite having the same weight,,Intended working design,Unsatisfactory,,81
validation-13,Users will not receive the correct reward tokens when DevFund is Under-supplied,,Intended design catering to extreme case due to prolonged truncation,Unsatisfactory,,81
validation-1383,"Wrong `taxCut` calculations in the `EntityForging`, `EntityTrading`, and `NukeFund` contracts",validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,82
validation-1149,Inaccuracy in calculateAge Function Due to Integer Division,validation-471,Partial crdeit for not addresing key issue leading to likely significant precision deviation entailed,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L118-L133,82
validation-1110,Users will loose all their Airdrop allocations if the buyer of their Entity Nukes ,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,82
validation-88,"The calculation  formula of the developer part in the `NukeFund::receive` function, will be wrong for certain values of `NukeFund::taxCut` variable,  leading to a misallocation of funds between the various parties.",validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,82
validation-67,Unsafe casting within `listForForging` and `forgeWithListed` functions can result in overflow,,The mod result is 0-9,Unsatisfactory,,82
validation-64,The ageMultiplier is not initialized leads to incorrect calculations,,Low QA on owner negligence initializing key variables,Unsatisfactory,,82
findings-162,Improper criteria for determining `claimAmount` in the `NukeFund.nuke()` function.,,Owner is trusted,Unsatisfactory,,82
validation-1035,"TraitForgeNft::_mintNewEntity:: _incrementGeneration(); line  https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L334 will never run , while forging",validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,83
validation-962,"Generation Issue of the ""Golden God"" 999999 in Batch 3 of the EntropyGenerator.sol Contract",validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,83
validation-889,Users can't mint more NFT's using 'TraitForgeNft::mintWithBudget' after generation 1 ,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,83
validation-817,Overcharging players resulting in Financial Imbalance in EntityForging in the forgeWithListed function,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,83
validation-569,"When merging NFT, user can bypass mintPrice corresponding to new NFT.",,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,83
findings-198,Nuke factor is only incorrectly increased by `0.25% per year * performanceFactor` instead of `2.5% per year * performanceFactor` in `calculateNukeFactor` function,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,83
validation-1371,Max generation can be passed while minting due to unchecked max generation variable,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,84
validation-1299,The erroneous conditional check in the `EntityForging.listForForging` function allows the `forgerTokenId` to be forged one more time more than the `forgePotential` value within an year since forge reset timestamp,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,84
validation-1286,Devfund.Claim() allows anyone to claim even if its not added as a dev,,It's msg.sender locked,Unsatisfactory,,84
validation-1026,"the `NukeFund.sol::calculateAge` function will return an age of zero.If the last digit of the entropy is zero, ",validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,84
validation-1008,"[H-02] Forging and minting new NFTs would become impossible in the future, because of access control.",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,84
validation-996,"Participants can't burn and nuke their NFTs, locking of NFTs and loss of fund",,"msg.sender no need be owner. OZ: (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth))",Unsatisfactory,,84
validation-790,"Excessive fee Charges in EntityForging::forgeWithListed leads to Overpayment and User DisTrust""",validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,84
validation-702,All of the contracts are pausable but none of them can be paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,84
validation-337,Compromised Approved Spender Can Burn all Owner's NFTs in `TraitForgeNft` contract,,Intended and expected ,Unsatisfactory,,84
validation-281,`getListedTokenIds` is inaccurate as `listedTokenIds` is not cleaned up when unlisting,,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,84
validation-156,Wrong accumulation of dev's pending rewards during weight updates,,Makes no difference. The intent is to have old value of info.weight taken care of prior to new update,Unsatisfactory,,84
validation-141,Excess payment is not returned to the merger when forging listed tokens and is stuck on the contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,84
findings-89,`NukeFund.defaultNukeFactorIncrease` is set to a wrong valuie ,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,84
findings-61,View function can mislead users to incorrectly nuke or forge their NFTs,validation-170,Could round to 0 e.g. when entropy is 999999. This report has a second issue to be deduped to #295,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,84
validation-1423,MintPrice is wrongly calculated for the First token starting from Gen 2,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,85
validation-1265,Using ERC721::transferFrom() instead of ERC721::safeTransfer() might cause the user's NFT to be frozen in if the receiver contract does not support ERC721 tokens,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,85
validation-988,"Centralization risk, could ruin the protocol.",,Low QA on centralization,Unsatisfactory,,85
validation-680,The current generation can go over the maximum generation due to insufficient check,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,85
validation-617,Incorrect Check Logic Allows Forgers to Forge More Times Than Mergers,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,85
validation-572,Various problems may arise due to incorrect implementation of `_mintInternal()`.,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,85
validation-565,Users suffer due to lack of slippage checking.,,Prices will be incrementally increased as expected,Unsatisfactory,,85
validation-479,Wrong age calculation results in less nuke factor and result in receiving less ETH from the Honeypot,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,85
validation-440,Users can forge an additional time above potential forging threshold.,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,85
findings-185,mintWithBudget function will become non-executable once 10k _tokenIds will be minted,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,85
findings-18,Can overforge,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,85
validation-974,User can mint NFT's paying much less than the mint price,,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,86
validation-945,"Potential Uninitialized `entropySlots` Reading in `getNextEntropy`, Causing 0 Entropy Mint",,Low QA on uninitialized entropy,Unsatisfactory,,86
validation-857,Reentrancy Risk in External Contract Calls in _beforeTokenTransfer Function,,This is an internal function. Calling function typically has nonReentrant visibility,Unsatisfactory,,86
validation-329,Incorrect Slot Index Check can lead to Out-of-Bounds Access (`EntropyGenerator::getNextEntropy`),,Working as intended,Unsatisfactory,,86
findings-141,"If `forge` is called for previous generations, it will revert",validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,86
validation-1301,Incorrect Token Pricing Across Generations,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,87
validation-1215,The user's airdrop eligibility is not properly updated when the NFT is sold,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,87
validation-845,Improper forging limitation check allows dead listings in `listForForging` function.,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,87
validation-844,Incorrect calculation of `initialNukeFactor` leads to always-zero value.,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,87
validation-746,"TraitForgeNft:_incrementGeneration Hard Resets `generationMintCounts` Despite Existing Non-Zero Counts, Leading to Tokens Exceeding 10,000 Hard Cap per Generation",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,87
validation-592,fetchListings() will return invalid listings that were cancelled,,Intended design with insufficient proof alleging the actual OOG flaw,Unsatisfactory,,87
validation-336,Incorrect handling of batch transfers can lead to inconsistencies in token metadata and listings (`TraitForgeNft::_beforeTokenTransfer`),,Intended design with insufficient proof alleging the flaw,Unsatisfactory,,87
validation-398,Generation incrementing is not working. ,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,88
validation-357,Incorrect number of nfts are minted when a generation is incremented allowing the protocol to accumulate extra funds,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,88
validation-229,Griefing attack on seller's airdrop benefits,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,88
validation-157,Rounding down tax contribution lets potential loss for NukeFund,,msg.value is ETH with 18 decimals,Unsatisfactory,,88
findings-156,"In the `_incrementGeneration()` function, if the number of minted NFTs for the incremented generation has already reached 10,000, it should increment the current generation again.",validation-741,Unneeded reset leads to >10k per generation (Same root cause albeit better mitigation),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,88
validation-1437,Distribution of entropy is not uniform,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,89
validation-917,Users can't mint NFT's after  generation 1,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,89
validation-778,Incorrect price calculation for first token of each generation due to delayed generation increment,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,89
validation-343,Accounting Issues Due to Generation Reset in _incrementGeneration,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,89
validation-298,Loss of Precision in Entropy Calculation Due to Incorrect Division Operation and Token Age Calculation Leading to Potential Exploitation of Funds,validation-471,Likely significant precision deviation entailed,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L118-L133,89
validation-159,Public Access to `writeEntropyBatch` Functions Allows Manipulation of Entity Traits,,No threats entailed. Whoever calls waste gas,Unsatisfactory,,89
findings-159,Incorrect `isApprovedForAll` check in the `NukeFund.nuke()` function.,,"msg.sender no need be owner. OZ: (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth))",Unsatisfactory,,89
findings-144,Forging potential is calculated differently on two separate occasions causing inconsistency,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,89
validation-1320,Missing ownership updates to Airdrop contract results in unfair airdrop distribution,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,90
validation-1311,Mis-match in `forgePotential` variable calculation,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,90
validation-1031,Precision Loss in Reward Calculation,,msg.value is ETH with 18 decimals,Unsatisfactory,,90
validation-1002,Seller is able to Steal buyer Fund without Transferring NFTs to buyer,,NFT already in contract custody,Unsatisfactory,,90
validation-627,Inconsistent Access Control for `initializeAlphaIndices` Prevents Generation Increment,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,90
validation-349,Inconsistent State in Listing Cancellation will Prevent Re-listing of Tokens (`EntityForging::_cancelListingForForging`),,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,90
validation-89,`_incrementGeneration` doesn't account for nfts created from forge,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,90
findings-205,`mintWithBudget` function fails to mint corresponding NFTs or spend budget after all NFTs for first generation are minted,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,90
findings-193,"`pseudoRandomValue` calculated by `% uint256(10) ** 78` in `unchecked` block is incorrect when calling `writeEntropyBatch1`, `writeEntropyBatch2`, and `writeEntropyBatch3` functions",findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,90
findings-149,More NFTs than maxTokensPerGen can be minted due to incorrect initialization,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,90
findings-90,mintWithBudget() will become unusable after the first generation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,90
validation-1303,Reentrancy Vulnerability in receive Function,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,91
validation-1241,Incorrect input validation in `setMaxGeneration`,,Low QA on admin input mistake,Unsatisfactory,,91
validation-392,"`TraitForgeNFT:MintWithBudget` DoS after `_tokenIds`  >= 10,000.",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,91
validation-330,Unauthorized Users Can Mint Tokens After Whitelist Period (`TraitForgeNft::mintToken` and `TraitForgeNft::mintWithBudget`),,Intended design,Unsatisfactory,,91
validation-139,Multiple best entropy value `999999` are possible,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,91
validation-1289,"`writeEntropyBatch` functions are not secured, and the values can be predictable",,Low QA on unneededly expensive VRF,Unsatisfactory,,92
validation-944,User won't be able to nuke the token,validation-1048,Inadequate control over AirDrop.sol ,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,92
validation-863, Invalid validation Flaw in `TraitForgeNft::_mintNewEntity` Prevents Proper Generation Advancement doing forging process,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,92
validation-772,An entity can be used to forge more than the forgePotential number of times.,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,92
validation-256,Generation tokens can exceed the `maxTokensPerGen` value because of wrong value being set,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,92
validation-46,TraitForgeNft.sol :: _incrementGeneration() will never be able to update to the next generation because the transaction will always revert due to the use of the onlyOwner modifier instead of onlyAllowedCaller in EntropyGenerator.sol.,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,92
validation-1187,Risk of Integer Overflow in `calculateNukeFactor` Method.,,Invalid assumptions,Unsatisfactory,,93
validation-720,Lack of functions to pause or unpause in all contracts implementing the Openzeppelin `Pausable` plugin,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,93
validation-566,Excess Funds are always lost,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,93
validation-548,999999 value is checked incorrectly while slot initializations,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,93
validation-516, `mintWithBudget` does not allow minting tokenIDs greater than 10000,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,93
findings-200,`forgerOwner` can DOS another user's `forgeWithListed` function call,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,93
findings-106,"Inadequate filtering of ""Golden God"" in the first two passes of entropy generation",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,93
validation-1135,`onlyOwner` modifier could lead to DoS for minting,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,94
validation-425,[H-2]  Generation Increment Failure Due to Misaligned Ownership ,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,94
findings-207,The requirement that highest generation cannot exceed `maxGeneration` can be broken,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,94
findings-114,Nuke function needs slippage control,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,94
findings-44,"Incorrect formulas used in `NukeFund::calculateAge` and `NukeFund::calculateNukeFactor`, which results in incorrect value for `finalNukeFactor`",validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,94
findings-30,"Each generation should have 1 ""Golden God"" NFT, but there could be 0",validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,94
validation-1159,Setting airdropContract to a different contract address/zero address or EOA address will revert all ETH transfer to this contract,,Low QA on address(0),Unsatisfactory,,95
validation-1408,"`TraitForgeNft::_incrementGeneration` resets `generationMintCounts[currentGeneration]` wrongly, which might lead to unexpected results.",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,96
validation-1238,Malicious NFT seller can make the buyer spend a lot of gas,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,96
validation-587,Tokens can be minted beyond the `maxTokensPerGen` in TraitForgeNft through `Forging`,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,96
validation-575,Does not Refund the Remaining Forging Fee.,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,96
validation-387,"False statement that there is only one ""Golden God"" NFT",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,96
validation-351,Malicious actors can exploit stale listing data in `EntityTrading::buyNFT` and `EntityTrading::cancelListing`,,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,96
validation-299,NukeFund could `burn dev share` when it receives ETH and `dev/dao contract is not set`,,Low QA on address(0),Unsatisfactory,,96
validation-200,The rewards that devs can receive will be affected by MEV.,,Makes no difference. The intent is to have old value of info.weight taken care of prior to new update,Unsatisfactory,,96
findings-138,Incorrect access modifier used on initializeAlphaIndices() function can lead to DoS of tokens minting,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,96
findings-27,Excess ether sent during forging are not refunded and lost to the `EntityForging` contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,96
validation-905,EntityTrading.sol:buyNFT( ) does not clear approval after transferring nft to buyer ,,_update() will have it taken of,Unsatisfactory,,97
validation-841,Incorrect calculation of `ForgePotential` leads to misrepresented entity potential.,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,97
validation-247,The leaf value of proof should not be exactly 64 bytes long prior to hashing,,Low QA,Unsatisfactory,,97
findings-179,user will loose Eth claimed via the nuke function,,Analyzer: [L-8] Loss of precision,Unsatisfactory,,97
findings-128,EntropyGenerator::deriveTokenParameters Bad Implementation,validation-170,Could round to 0 e.g. when entropy is 999999. This report has a second issue to be deduped to #295,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,97
validation-1111,[M-01] Pause Functionality Not Implemented,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,98
validation-840,Incorrect mint price calculation prior to `_mintInternal` function execution.,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,98
validation-538,Merger Will Lose Excess ETH Sent in `EntityForging::forgeWithListed` and ETH Stuck Forever in Contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,98
validation-338,Incorrect `mintPrice` When `maxTokensPerGen` Is Reached,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,98
validation-231,User pending rewards are calculated incorrectly using old weight,,Makes no difference. The intent is to have old value of info.weight taken care of prior to new update,Unsatisfactory,,98
findings-153,Aging mechanism does not work properly due to incorrect value of `defaultNukeFactorIncrease`,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,98
validation-1037,"Protocol cannot be paused, in case of emergency",validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,99
validation-818,[M-4] Users will lose their airdrop share if they are not the original minter of the `TraitForgeNft`,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,99
validation-729,Reentrancy Vulnerability in buyNFT Function Due to Improper State Handling,,buy() is nonReentrant,Unsatisfactory,,99
validation-681,Lack of Tracebility ,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,99
validation-612,It's possible to exceed max generation by minting,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,99
validation-211,Manipulatable entropy due to use of block parameters.,,Low QA on unneededly expensive VRF,Unsatisfactory,,99
validation-1419,[H-03] Logic allows for deliberate minting of rare NFT-s.,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,100
validation-674,All minting will revert after the completion of Generation 1 minting.,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,100
validation-539,Incorrect Percentage Calculation in NukeFund and EntityForging when `taxCut` is Changed from Default Value,validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,100
validation-509,Unauthorized ETH Transfer Risk in `receive` Function,,Low QA on user's mistakes,Unsatisfactory,,100
findings-148,Users can mint NFTs with entropy value favorable for them making the game unfair ,,Low QA on unneededly expensive VRF,Unsatisfactory,,100
findings-109,BuyNFT allows the seller to buy his own NFT,,Low QA on user's mistakes,Unsatisfactory,,100
validation-300,Malicious user could grief forge listing,,Commonly known issue for fair competition,Unsatisfactory,,101
validation-957,Incorrect mint price calculation for the first token of new generations,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,102
validation-740,"The initial NukeFactor is at a minimum of 2.5%, which, according to the documentation, is incorrect.",,Discord: It all depends on the denominator but all are correct from what I know,Unsatisfactory,,102
validation-222,Read only reentrancy in `DevFund::claim` function.,,claim() is nonReentrant,Unsatisfactory,,102
validation-1028,generationMinCounts Would be reset wrongly in unique Circumstances ,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,103
validation-853,Potential Loss of Funds Due to Incorrect ETH Transfer Order,,"Circumvented by require(success, 'Failed to send to seller')",Unsatisfactory,,103
validation-773,NFT seller could `grief buyer` when they call `buyNFT` by making the call revert when receiving funds,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,103
validation-171,`Entropy slot` design require some love,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,103
validation-1446,Invalid One Year Values Cause Excessive Forge Resets,,Intended design. oneYearInDays set to 0 will require admin input mistake,Unsatisfactory,,104
validation-1366,Unchecked ERC20 Token Transfer,,Airdrop.sol is OOS,Unsatisfactory,,104
validation-1266,Some ETH may be locked in the contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,104
validation-1204,Potential Rounding Errors in Developer Share Allocation,,msg.value is ETH with 18 decimals,Unsatisfactory,,104
validation-1068,Wrong Price calculated for minting for the first entity of a new Generation,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,104
validation-856,Single NFT can be listed both for forging and for sale,,Incorrect assumptions,Unsatisfactory,,104
validation-682,mintWithBudget does not work after a Generation 1 mint is complete.,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,104
validation-675,Incorrect Generation Increment Logic in _incrementGeneration,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,104
validation-476,Admin's incorrect `taxCut` adjustment will lead to inaccurate share distribution for `devShares` and `nukeFundContribution`,validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,104
validation-78,"The formula for calculating the `nukeFundContribution` when buying a nft in the `EntityTrading::buyNft` function is limited to a single value of `EntityTrading::taxCut`, resulting in a poor distribution of funds between the different parties.",validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,104
findings-203,Either `deriveTokenParameters` or `listForForging` function is incorrect for calculating `forgePotential` for an `entropy`,validation-170,Could round to 0 e.g. when entropy is 999999. This report has a second issue to be deduped to #295,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,104
findings-173,There is the possibility the entropy of the Alpha NFT to be in a slot that is not used,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,104
validation-1285,Reverting forging attempts for Parent tokens of older generations,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,105
validation-1134,The `EntropyGenerator.sol::getEntropy` function may return a zero entropy value if the `slotValue` contains an insufficient number of digits.,,Similar to Analyzer: [L-8] Loss of precision,Unsatisfactory,,105
validation-1343,DoS in the TraitForgeNft::mintWithBudget function after 10_000 minted NFTs,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,106
validation-1106,The `Golden God` NFT might never be minted in a generation because of forging.,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,106
validation-1014,A dev will lose rewards if after claiming his rewards he mints an NFT,,"Intended design. Also, claim() is nonReentrant",Unsatisfactory,,106
validation-959,Buyers can purchase  listed NFTs  with a any amount,,Circumvented by msg.value == listing.price,Unsatisfactory,,106
validation-477,Duplicate NFT generation via repeated forging with the same parent,validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,106
findings-202,"Executing `require(pseudoRandomValue != 999999, 'Invalid value, retry.')` in `writeEntropyBatch1` and `writeEntropyBatch2` functions are not sufficient for avoiding Golden God entropy",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,106
validation-948,Listed tokens are not cleared after purchase,,Inconsequential as the token is still relistable,Unsatisfactory,,107
validation-611,Overflow Risk in calculateNukeFactor Function.,,Invalid assumptions,Unsatisfactory,,107
validation-559,Incorrect accounting of total Reward debt in receive function will result in locked/unrecoverable ether,,Incorrect assumptions,Unsatisfactory,,107
validation-358,"ForgePotential can be exceeded, which will result in a potential abuse in forging process",validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,107
validation-1018,Centralization Risk in DevFund.sol,,Low QA on centralization,Unsatisfactory,,108
validation-966,The owner of forger listed for forge can deliberately cause players try to forge with it fail to do so,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,108
validation-839,Inconsistent initialization of `generationMintCounts` during new generation start via forge.,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,108
validation-619,Minting across two generations causes one NFT from next generation to be minted at start price,validation-1379,The unlucky generation transition price (Partial credit as report says the other way round),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,108
validation-102,TraitForgeNft.sol :: mintWithBudget() can only mint the first generation being useless for the next ones.,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,108
validation-1454,Invalid Calculation of `mintPrice` for the first entity for each new generation in `TraitForgeNft.sol`,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,109
validation-1191,The `generationMintCounts[currentGeneration]` is reset to `0` during `_incrementGeneration` which is erroneous and removes the state of the NFT mint count of the `forged NFTs` in the higher generation,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,109
validation-1048,"All calls from `TraitForgeNft` to `Airdrop` will revert due to improper access control, resulting in completely unusable functionalities",validation-1048,Inadequate control over AirDrop.sol ,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,109
validation-933,Inoperable Pausable Functionality in Multiple Contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,109
validation-821,Possibility of sending zero 'devShare',,msg.value is ETH with 18 decimals,Unsatisfactory,,109
validation-693,Lack of Validation Allows Minting More NFT Beyond expected `maxGeneration`,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,109
validation-542,Entropy is 0 when `writeEntropyBatch` functions are not initialized.,,Low QA on uninitialized variable,Unsatisfactory,,109
validation-327, Blanket Approval Vulnerability in `EntityTrading::ListNFTForSale` function,,nftContract.ownerOf(tokenId) == msg.sender is in place,Unsatisfactory,,109
findings-154,Vulnerability in `TraitForgeNFT::_incrementGeneration` Function Allows Unlimited Generation Increment,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,109
validation-708,Potential DoS via Unhandled Ether Transfer to Seller in buyNFT Function,,Low QA frequently reported by bots in the past,Unsatisfactory,,110
validation-391, User can game the entropy system and only mint entities with desirable traits.,,Low QA on unneededly expensive VRF,Unsatisfactory,,110
validation-322,"`currentGeneration` can exceed `maxGenerations`,  because of missing check",validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,110
validation-1386,Unchecked Return Value of Uniswap Swap,,DAOFund.sol is OOS,Unsatisfactory,,111
validation-1306,Multiple Entities could be minted with same entropies ,validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,111
validation-1161,Users can still mint after the max tokens for Generation 10 has being minted,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,111
validation-457,First mint of new generation is significantly more expensive than it should be ,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,111
validation-1474,Incrementing the generation does not consider the forged entities of the new generation and resets the count of entities to 0,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,112
validation-1375, Forger Entities can forge more times than intended,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,112
validation-1346,Token Theft Due to Arbitrary ERC20 Token Transfers Enabled by tx.origin,,Airdrop.sol is OOS,Unsatisfactory,,112
validation-227,Improper handling of final generation minting,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,112
findings-6,NFTs take much longer to mature than expected,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,112
validation-1237,Excess value in `forgeWithListed()` function is not refunded to the user,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,113
validation-620,Rounding Issues in Developer Share Calculation,,msg.value is ETH with 18 decimals,Unsatisfactory,,113
findings-206,`generationMintCounts` for a generation can be incorrectly reset to 0 after a `forge` function call has minted an NFT for such generation,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,113
validation-1200,Tokens can be forged an extra time beyond `forgePotential` due to an incorrect inequality check,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,114
validation-1087,The minting with a budget triggers the out of gas error,,Budget is user controlled,Unsatisfactory,,114
validation-483,"When minting NFTs with a budget a lot of gas is used transferring ETH, which results in minting less NFTs than when transfer is optimized",,Low QA on gas optimization,Unsatisfactory,,114
findings-197,"`block.number` can be manipulated by a malicious miner when calling `writeEntropyBatch1`, `writeEntropyBatch2`, or `writeEntropyBatch3` function",,Low QA on unneededly expensive VRF,Unsatisfactory,,114
findings-186,A user can forge his NFT one time more than it is allowed,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,114
validation-1374,"Forger Can Front Run, Relist Tokens And Claim Donations",,Commonly known issue. User mistake considered low QA in this context (unlike #770),Unsatisfactory,,115
validation-1291,The rounding error introduced in the `age` value calculation of the `NukeFund.calculateAge` function will result in loss of funds to the `msg.sender` of the `NukeFund.nuke` transaction,validation-471,Likely significant precision deviation entailed,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L118-L133,115
validation-1127,In `EntityForging::forgeWithListed()` the forger can gas grief the merger.,,Analyzer: [L-4] External call recipient may consume all transaction gas,Unsatisfactory,,115
validation-910,Owner of EntropyGenerator must be TraitForgeNft contract,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,115
validation-920,Incorrect Calculation of `nukeFactor` in `EntropyGenerator::deriveTokenParameters` Results in Zero Value,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,116
validation-116,"Incorrect Token ID Check in `mintWithBudget` Function Limits NFT Minting Beyond 10,000",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,116
validation-41,"EntityTrading.sol :: nukeFundContribution in the buyNFT() is not calculated correctly, leading to incorrect fees being contributed to Nuke Fund.",validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,116
findings-81,Best NFTs will be fully matured after 4056 days,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,116
findings-57,Maximum number of generations can be surpassed,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,116
validation-770,Excess ether received in `EntityForging::forgeWithListed` gets locked in the contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,117
validation-404,Incorrect Range Check in `EntropyGenerator` Contract Allowing Batch Overlap,,lastInitializedIndex is the starting point of the next batch,Unsatisfactory,,117
findings-94,`_incrementGeneration()` will always revert meaning once gen1 is fully minted new NFTs can only be forged,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,117
validation-340,Incorrect Mint Price Calculation will Lead to Underpriced Mints (`TraitForgeNft::mintWithBudget`),validation-1379,The unlucky generation transition price (Partial credit since report says the otehr way),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,118
validation-568,"For all generations except Gen1, the first NFT price is not calculated as expected.",validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,119
validation-279,`Forging` with `excess funds` is not reimbursed to the merger and is stuck in the contract forever,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,119
validation-1184,The `mintPrice` calculation is broken when the first NFT of the next generation is minted,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,120
validation-1174,Token cap bypass and loss of funds due to uncecessary generation mint counter reset,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,120
validation-528,Protocol will be stuck at generation 1 forever,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,120
validation-1340,Excess fees are not transfer back to user in `forgeWithListed` function and locked in contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,121
validation-405,Listing Unforgeable Forgers to Forge List.,,Low QA frequently reported by bots in the past,Unsatisfactory,,121
validation-277,EntropyGenerator: Wrong validation in writeEntropyBatch1 and writeEntropyBatch2,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,121
validation-769,Forger NFT owner could `grief merger` when they call `forgeWithListed` by making the call revert when receiving funds,,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,123
validation-606,No Cooldown Period for Listing and Delisting in `EntityForging` Contract,,Intended design. No loss of funds entailed. QA at best,Unsatisfactory,,123
validation-282,`fetchListings` is inaccurate as returning always an empty first entry,,listingCount is pre-incremented,Unsatisfactory,,123
validation-973,"No way to return and withdraw excess amount in `EntityForging::forgeWithListed`, Locking of funds.",validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,124
validation-1201,`_incrementGeneration()` function will never call in `_mintNewEntity`  function,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,125
validation-1040,The minting with a budget does not work after 10000th NFT,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,125
validation-266,TraitForgeNft::mintWithBudget will be unusable from the second generation onwards,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,125
validation-165,"Wrong Validation Logic in `writeEntropyBatch1` and `writeEntropyBatch2` Allows ""the Golden God"" Exist in the First Two Batches",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,125
validation-1064,Minting last NFT of current generation doesn't work as intended,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,126
validation-304,Nuking is broken for approved personnels,,"msg.sender no need be owner. OZ: (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth))",Unsatisfactory,,126
validation-1475,"wrong contracts deployment, can lead to severe results where tokens has no entropy.",,TraitForgeNft.test.ts is OOS,Unsatisfactory,,127
findings-8,Wrong access control in EntropyGenerator,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,127
findings-4,Incorrect calculation of the price of each new generation first NFT,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,127
validation-382,Front-running `TraitForgeNft.sol::forge` allow malicious actors to gain MEV,,Low QA on unneededly expensive VRF,Unsatisfactory,,128
validation-239,Wrong calculation of `taxCut` can lead to incorrect distribution of funds,validation-539,Wrong algebra applied,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L41,128
validation-212,`initializeAlphaIndices` uses the wrong modifier and correction for this risks certain protocol functionalities being unavailable.,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,128
findings-62,An entropy with value 0 can be generated which will break the physical trait assignment of the NFTs,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,128
validation-366,DoS vulnerability in EntityTrading::buyNFT and EntityForging::forgeWithListed functions because a contract that listed nft for sale or for forging might not accept ETH transfer,,Low QA frequently reported by bots in the past,Unsatisfactory,,129
validation-918,Incorrect Calculation of `forgePotential` in `EntropyGenerator::deriveTokenParameters`,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,130
findings-22,"writeEntropyBatch3 shouldn't be able to generate the ""Golden God"" entropy of 999999",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,130
validation-452,A generation might not have a single NFT with entropy of 999999,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,131
validation-305,`DevFund.sol:` Later devs are being heavily discriminated against considering they receive `1/x` value of rewards,,Intended working design,Unsatisfactory,,131
validation-981,The generation can’t up to 2nd with pure mint function,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,132
validation-430,"After minting all generation 1, no one can mint again because EntropyGenerator::initializeAlphaIndices() function will revert ",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,132
findings-97,entropy repeats every 10010 NFTs,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,132
validation-1463,Excess Eth is not refunded back to the user,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,133
validation-1387,Nuke call can be easily front run leading to user getting less ETH than expected while it's NFT gets burned,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,133
validation-731,Can't `mintWithBudget` after the first generation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,133
validation-621,"EntropyGenerator::initializeAlphaIndices has wrong access modifier, causing inability to initialize indexes for later generations",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,133
validation-540,Player can get higher reward than potential value while nuke function,findings-165,Missing slippage to protect against front-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,134
findings-36,`EntropyGeneration::writeEntropyBatch1` Incorrect Requirement May Cause Unwanted NFTs with Max Entropy,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,134
validation-1160,Incorrect modifier in `EntropyGenerator::initializeAlphaIndices()` prevents incrementing generations,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,135
findings-155,deriveTokenParameters is implemented incorrectly,validation-170,Could round to 0 e.g. when entropy is 999999. This report has a second issue to be deduped to #295,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,135
validation-777,Generation limit can be bypassed via direct minting.,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,136
validation-169,EntropyGenerator::getEntropy() slicing calculations leads to wrong NFT stats distribution,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,136
validation-601,"[H-02] `TraitForgeNft::_incrementGeneration` lacks authorization to call `EntropyGenerator::initializeAlphaIndices`, which prevents the protocol from moving to a new generation.",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,137
validation-290,Users can forge one more time than forger token's forge potential,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,137
findings-95,NFTs can exceed maxGen,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,137
findings-13,"Owners of NFTs with the forger role, can list their NFTs more times than they are supposed to",validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,137
validation-1130,The starting price of every generation after 1st is incorrect,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,138
validation-987,TraitForgeNft’s MaxTokensPerGen limit may be bypassed,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,138
validation-1102,`_incrementGeneration` Function in `TraitForgeNft` Contract Always Reverts,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,139
validation-783,Entropy generation does not meet specification requirements,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,139
validation-558,Missing amount validation while transferring 'nukeFundContribution',,msg.value is ETH with 18 decimals,Unsatisfactory,,139
validation-513,Funds Are Not Refunded in `EntityForging::forgeWithListed` Function,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,139
validation-506,Incorrect check makes `mintWithBudget` ineffective after first generation minting,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,139
validation-458,"""NukeFund:CalculateAge"" calculates age based on the 'performanceFactor` parameter which can equal 0, resulting in the token being unable to age.",validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,139
validation-289,Forging when `nuke contract is not set` will cause the `dev cut to be burned`,,Low QA on address (0) check,Unsatisfactory,,139
findings-21,Minted tokens per generation can exceed the `maxTokensPerGen` ,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,139
validation-549,"NFTs can be minted without batch initialization, which always results in a forger infertile NFT",,Low QA on uninitialized variable,Unsatisfactory,,140
validation-377,Denial of Service Vulnerability cause extremeyly higher and higher gas cost and eventually exceed block gas limit when fetching listed NFTs for sale or for forging in frontend or  in EntityForging::fetchListings() function because of listingCount variable in both EntityTrading and EntityForging contracts keeps increasing,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,140
validation-129,EntityTrading.sol does not accept ERC721 tokens,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,140
findings-199,Forger token's `forgingCounts` can exceed its `forgePotential`,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,140
validation-235,Generations can be incremented beyond the maximum allowed,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,141
validation-1242,"User can be forced to spend a lot for gas when trying to merge his NFT with Forger, due to missing gas limit check",,Analyzer: [L-4] External call recipient may consume all transaction gas,Unsatisfactory,,142
validation-209,Contracts are meant to be pausable but cannot be paused/unpaused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,142
validation-164,`mintWithBudget` will stop minting for generations 2 and beyond,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,142
validation-86,"TraitForgeNft.sol :: mintToken() allows the maxGeneration limit to be bypassed, enabling to the users to mint an unlimited number of generations.",validation-929,newGeneration <= maxGeneration could have in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,142
validation-1157,Lack of External Pause/Unpause Functionality in Pausable Contracts,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,142
validation-638,Wrong access control of initializeAlphaIndices() blocks the mint from early stage,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,143
validation-248,DOS of the mintToken function after the 10 000th token minted,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,143
findings-195,Attacker can access private `currentSlotIndex` and `currentNumberIndex` from `EntropyGenerator` contract's storage and have his `mintToken` transaction to be executed when `currentSlotIndex` and `currentNumberIndex` match `slotIndexSelectionPoint` and `numberIndexSelectionPoint` or correspond to a wanted `entropySlots` value,,Low QA on suggesting off chain option,Unsatisfactory,,143
findings-93,Nuke can burn user NFT without giving any reward,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,143
findings-38,Wrong price for first token of each generation,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,143
validation-1277,Missing access modifier in `EntropyGenerator::initializeAlphaIndices`,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,144
validation-1081,Missing Function to Call `allowDaoFund` in `TraitForgeNft` Contract,validation-1048,Inadequate control over AirDrop.sol ,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,144
validation-579,"[H-01] `TraitForgeNft::mintWithBudget` does NOT mint new tokens after 10,000 tokens have been minted.",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,144
validation-537,Non-aging entities have much more possibility to mint due to padding,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,144
validation-385,Loss of user(merger) fund when overpaying EntityForging::forgeWithListed() function ,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,144
findings-192,"There's no check that the new incremented generation (currentGeneration) is <= maxGeneration, when minting a new token, the id of which is 10000",validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,144
validation-1203,Breaking `maxGeneration` invariant in `TraitForgeNft` contract.,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,145
validation-1182,"Due to the the `entropySlots` array containing 10,010 slots, it is possible a generation will not contain a 'Golden God' token",validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,145
validation-858,"Due to the missing max budget limit, the `mintWithBudget` function will be unusable in some scenarios",,Budget is user controlled,Unsatisfactory,,145
validation-827,"Due to the `onlyOwner` modifier on `initializeAlphaIndices`, the transition to the next NFT generations reverts, making `TraitForgeNft` completely unusable",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,145
validation-531,Minting 0 Entropy NFTs is Possible,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,145
validation-940,The mint price for the last token is incorrectly calculated before checking and incrementing the generation,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,146
validation-234,Excess payments sent during the forging process will remain locked in the contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,146
validation-203,A seller can buy himself his NFT,,No economic benefits doing this,Unsatisfactory,,146
findings-101,Golden god can appear outside of the third batch,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,146
validation-1236,Tokens Can Be Created More Than `maxTokensPerGen = 10000` in Second and Subsequent Generations,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,147
findings-178,Malicious user with crafted entropy could drain the NukeFund,,Intended design for users to race grab,Unsatisfactory,,147
validation-75,Forging an Entity by paying excessive ETH will not refund and permanently lock the excessive value in contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,148
validation-1417,Title Users can be temporary DOSed and unable to `nuke`,,Intended design. lastTokenTransferredTimestamp is updated with block.timestamp in _beforeTokenTransfer,Unsatisfactory,,149
validation-1195,Lack of ability to make an some external function calls makes the DAO stage unreachable.,validation-1048,Inadequate control over AirDrop.sol (Similar root cause on DAOFund.sol),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,149
validation-895,Wrong parameter may cause DoS to mintWithBudget,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,149
validation-735,Increment Generation function reverts because the owner of the entropy generator contract is not the nft contract.,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,149
validation-571,"In over 2nd generation, the price of the first NFT is inaccurate.",validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,149
validation-1402,Excessive Tokens with Zero Performance Factor in a Generation,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,151
findings-3,"Multiple contracts are supposed to be Pausable, but can't be paused",validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,151
validation-1125,Unintended Increase in Token Generations Beyond Protocol Limit,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,152
validation-1113,`mintWithBudget` Function Malfunction for Generations Beyond the First,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,153
validation-397,`Aging feature` is currently not working and `always zero`,,Low QA on uninitialized variable,Unsatisfactory,,155
findings-15,DOS Vulnerability in `EntityForging::fetchListings` Due to Unbounded Loop,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,155
validation-929,The maximum number of generations is infinite,validation-929,newGeneration <= maxGeneration could have in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,156
validation-307,Incorrect allocation of rewards leading to not enough funds for others to withdraw rewards,,Makes no difference. The intent is to have old value of info.weight taken care of prior to new update,Unsatisfactory,,156
validation-153,NukeFund.sol ::  nuke() NFTs to be nuked immediately without waiting for the required 3-day maturation period.,,lastTokenTransferredTimestamp is updated with block.timestamp in _beforeTokenTransfer,Unsatisfactory,,157
validation-1178,"Due to an incorrect `require` statement in the `writeEntropyBatch()` functions, there is no protection against multiple 'Golden God' tokens apprearing in a single generation",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,158
validation-631,A player can generate multiple time 'perfect' entity,,Commeonly known issue involving multiple controlled addresses,Unsatisfactory,,158
findings-11,Denial of services permanently after finishing the first generation of NFTs in the `TraitForgeNft` contract,validation-1048,Inadequate control over AirDrop.sol. ,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,158
validation-1131,Entropy is generated incorrectly.,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,159
validation-860,"Discrepancy between nfts minted, price of nft when a generation changes & position of `_incrementGeneration()` inside `_mintInternal()` & `_mintNewEntity()`",validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,160
findings-103,Recipients of native funds can DOS users,,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,160
validation-461,Forger can list his token for forging exceeding his forgePotential by 1 in EntityForging::listForForging(),validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,161
findings-196,"Malicious miner can force Golden God to be minted to him by manipulating `blockhash`, `block.number`, and `block.timestamp` that are used in `initializeAlphaIndices` function",,Low QA on unneededly expensive VRF,Unsatisfactory,,161
validation-1071,New generation's first NFT's price is wrong,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,164
validation-410,The forger could forge more than its forging potential one more,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,164
findings-39,Forgers Can Set Their `EntityForging::lastForgeResetTimestamp` Without Forging With Anyone,,Intended design,Unsatisfactory,,164
validation-1230,Function call error,validation-1048,Inadequate control over AirDrop.sol. Also a duplicate of #1308,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L297,165
validation-1076,Tokens with IDs Ending in Two Zeros Have Significant Limitations,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,165
validation-927,Irreversible Reduction in User Payouts Due to Unset `NukeFund::ageMultiplier` When Burning Entities,,Low QA on owner negligence initializing key variables,Unsatisfactory,,165
validation-236,`_incrementGeneration` resets `generationMintCounts` and ignores the tokens already forged on the new generation,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,165
validation-713,"Forgers and mergers can create new tokens with the same entropy when they forge, breaking the uniqueness of NFTs",validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,166
validation-1164,[H-02] Increment Generation Resets Mint Count Incorrectly Breaking Price Calc And Mint Counts Tracking,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,167
findings-29,Incorrect Access Control in EntropyGenerator won't allow generations to progress and will limit the game to only have 1 generation,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,167
validation-739,Calculate mint price returns incorrect calculations,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,170
validation-163,"EntropyGenerator::entropySlots are not always 78-digit numbers, causing wrong NFT stats distribution",findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,171
validation-40,Nuking token doesn’t sent ETH to token owner,validation-40,Severe flaw if operator were involved,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L177,171
findings-73,Additional `msg.value` is not refunded,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,172
validation-1118,mintWithBudget can only be called when _tokenIds < maxTokensPerGen.,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,173
validation-737,Mint with budget will stop working,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,173
validation-228,Incorrect Entropy Padding Causes Wrong Entity's attributes,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,173
validation-786,"Mint price calculation is wrong and results in inconsistencies, such as overpricing the first mint in a new GEN.",validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,174
validation-445,A malicious party can generate unfillable listings,,Low QA frequently reported by bots in the past,Unsatisfactory,,174
findings-2,Not calling `_incrementGeneration()` before `calculateMintPrice()` will lead to loss of funds for minter,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,174
findings-26,Users can't mint multiple tokens after the first generation is finished,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,175
validation-1293,"Entropy value does not always have 6 digits, leading to a non-playable Entity.",,Inadequate elaboration,Unsatisfactory,,176
validation-471,"Imprecise token age calculation results in an incorrect nuke factor, causing users to claim the wrong amount",validation-471,Likely significant precision deviation entailed,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L118-L133,176
validation-788,"mintWithBudget won't work after Generation 1, due to wrong require check in while loop",validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,178
validation-108,Missing check allows fertile forgers to forge `forgePotential+1` times,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,178
validation-551,Can't mint nft after the first generation due to access control in `EntropyGenerator::initializeAlphaIndices` function,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,179
validation-339,Improper entropy calculation generates unrandom parameters,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,179
validation-524,"TraitForgeNft: Can not mint more than 10,000 NFTs",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,180
validation-775,Incorrect calculation of the increasing factor for nukefactor leads to a yield loss.,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,182
findings-56,Tokens per generation limit can be surpassed,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,185
validation-1101,Users can't mint when generationMintCounts[currentGeneration] >= maxTokensPerGen because initializeAlphaIndices function can only be call by the owner,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,186
validation-1039,NFTs mature too slowly under default settings.,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,186
validation-1010,Possibility to create more than 10 000 entities per generation,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,186
findings-35, Incorrect Pricing for First Tokens of New Generations in `TraitForgeNft::mintToken` Function,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,186
findings-82,Users can't use `mintWithBudget` after first generation is minted (tokenId > 10000),validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,187
validation-1284,excess funds sent by the merger during `forgeWithListed` will be stuck in the `EntityForging `,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,188
validation-701,"Duplicate NFT tokens are produced when the same entities forge multiple times, breaking the main game invariant",validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,188
validation-450,Funds can be left locked in the `EntityForging.sol` contract with no way to be redeemed,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,188
findings-34,`mintWithBudget` is unuseable after entering second generation due to flawed logic,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,188
validation-1481,NFT's will be locked forever because of using `EntityTrading::function transferFrom()` for buying NFT.,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,189
findings-115,Malicious users can game the entity forging,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,189
findings-71,"Forging mechanism can prevent the existence of the ""Golden God"" entropy in the next generation",validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,191
findings-17,Incorrect Increment By Generation Calculations in `TraitForgeNft::calculateMintPrice`,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,191
validation-643,Forger can list a token for forging when he has reached the limit and forge one more time.,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,194
validation-1029,The function `mintWithBudget()` stops working after the first generation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,195
findings-59,New generations that exceeds the max generation that can exist breaching the max generation invariant can be created,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,195
validation-738,Forgers can forge with other entities one more time than their forge potential,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,198
validation-833,Incorrect forgePotential Extraction in EntropyGenerator::deriveTokenParameters() Function Can Mislead Users on Frontend Trait Display,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,199
findings-16,Incorrect Calculations for `nukeFactor` and `forgePotential` in `EntropyGenerator::deriveTokenParameters`,validation-170,Could round to 0 e.g. when entropy is 999999. This report has a second issue to be deduped to #295,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,199
validation-1172,`TraitForgeNft::mintWithBudget()` is DOSed after `maxTokensPerGen` are minted across all generations,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,200
validation-761,EntropyGenerator::getNextEntropy returns golden god entropy when it is not supposed to do so,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,200
findings-88,Users can mint an unlimited number of NFTs and generations,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,200
findings-87,Wrong minting Price for the first member of a new generation,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,205
findings-111,ETH will get stuck/locked in the EntityForging contract,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,207
validation-111,DoS: `forgeWithListed()` may be made unusable by an attacker,validation-111,Fix is desired but QA bound as there's no loss of fund entailed in the DoS,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityTrading/EntityTrading.sol#L20,208
validation-2,Can’t increment generation due to wrong function modifier,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,208
validation-1056,Unsafe low-level call to nukeFundAddress can lead to loss of funds,,Low QA on address(0) check,Unsatisfactory,,209
validation-257,`Forging and minting` can `clash` together which break accounting allowing to mint `beyond 10k limit` per generation,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,210
findings-60,"Insufficient checks allow for the ""Golden God"" entropy generation in the first 2 batches",validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,210
validation-1315,In edge cases `NukeFund::nuke(id)` won't send any ETH after burn,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,211
validation-791,`getNextEntropy` is lacking `whenNotPaused` modifier which allow player to mint even if the contract is paused,,Intended design on a restricted call,Unsatisfactory,,213
validation-884,"Forger can list their Entity and Forge with their own merger token in a single transaction, thereby minting new tokens at a very cheap price and preventing others from participating in the forging market. ",,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,214
validation-118,`TraitForgeNft` is only able to `mint generation 1` due to wrong access control,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,214
validation-892,"[H-03] In `EntropyGenerator::getNextEntropy`, the variables `currentSlotIndex`, `slotIndexSelectionPoint`, `currentNumberIndex`, and `numberIndexSelectionPoint` are accessible from storage, potentially allowing front-running attacks to predict and select maximum entropy before minting.",,Low QA on unneededly expensive VRF,Unsatisfactory,,215
validation-689,Incorrect check in `mintWithBudget` causes function to be useless and user's gas to be wasted,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,215
validation-686,"TraitForgeNft: Generation mint count is wrong and allows for more than 10,000 NFTs per generation",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,215
validation-1169,"`TraitForgeNft::_incrementGeneration()` resets `generationMintCounts` which erases previously forged token count, as a result more tokens than `maxTokensPerGen` can be minted in a given generation",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,216
validation-741,Number of entities in generation can surpass the 10k number,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,216
findings-126,Number of tokens per gen can be double the `maxTokensPerGen`,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,216
findings-75,Generation greater than `maxGeneration` can be minted,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,216
validation-1384,"Malicious NFT Owner who lists his NFT for forge, can DoS forging requested from Mergers",,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,218
validation-803,Forger NFT are able to `forge an additional NFT` then what their forge potential allow,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,219
validation-114,`mintToken` and `mintWithBudget` allow to mint beyond `maxGeneration`,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,219
validation-1296,"Malicious NFT Owner can DoS  the `buyNFT` function, when he is called to receive fees.",,Commonly known issue frequently reported by bots in the past,Unsatisfactory,,221
validation-1368,Whitelisted Users Minting Tokens Before Entropy Generation Receive Zero Entropy,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,222
validation-460,"Forger can list their Entity for Forging and prevent others from forging with it, by deliberately causing a revert of the transfer of the forger Fee.",,Commonly known issue using different addresses controlled by the same user,Unsatisfactory,,222
validation-580,Failure in NFT Forging System Due to Flawed Forger Determination,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,223
validation-446,Missing ownership transfer in `EntropyGenerator.sol` blocks minting in `TraitForgeNft.sol` ,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,223
validation-747,Malicious user can carefully craft transaction that will only mint the most valuable NFT (the one with entropy of 999999) within each generation effectively gaming the system,,Intended design for users to race grab,Unsatisfactory,,224
validation-1190,"Due to forging, it is possible a generation will not contain a 'Golden God' token",validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,225
validation-112,Incorrect Access Control Prevents Generation Increment,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,226
validation-1369,Incorrect logic implementation will require from users to pay more ETH than they should when new generation starts,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,229
findings-83,Generation can exceed 10000 tokens,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,229
findings-43,"Aging/maturity calculations are incorrect, resulting in wrong claiming percentage of the NukeFund",validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,229
validation-873,The lack of generation increase results in `mintWithBudget` doing nothing and wasting the user's gas.,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,230
validation-133,EntityForging::forgeWithListed does not handle surplus funds,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,230
validation-65,Missing Refund Logic in forgeWithListed May Result in Fund Loss,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,231
findings-119,It is possible to reach generations bigger than maxGeneration,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,231
validation-1058,Incorrect calculation logic/parameters for claim amount when entity is nuked,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,232
validation-475,Untimely mint price calculation charges users too much,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,232
findings-41,Excess ETH from `forgingFee` can get stuck in `EntityForging` under certain situations,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,232
validation-583,A malicious party can generate unforgeable listings,,Low QA frequently reported by bots in the past,Unsatisfactory,,233
validation-324,Incorrect Access Control in EntropyGenerator's initializeAlphaIndices Function,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,233
validation-624,"Malicious users can gain unfair advantage to the game economy and only pay for favorable NFTs with favorable factors, rendering game entropy useless.",,Low QA on unneededly expensive VRF,Unsatisfactory,,236
findings-70,Lack of generation limit check in `mintToken` and `mintWithBudget` functions allows bypassing of maxGeneration limit,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,236
validation-1199,"Due to the maximum value of a uint256 and the modulo in the `writeEntropyBatch()` functions, the first entropy per slot can never be a 'forger' and will always have a `performanceFactor` of 0",findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,237
validation-1151,"Invariant of 10,000 Entities Per Generation Breaks Due To The TraitForgeNft:`_incrementGeneration()` reset",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,237
validation-464,Forgers have higher forging potential compared to mergers,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,239
validation-1051,Generation Cannot Be Increased When Maximum Tokens Per Generation Is Reached,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,242
validation-1045,`_mintNewEntity()` always fails if the forgerToken is from before the previous generation,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,244
validation-373,"If the Number of Minted Tokens for a Given Generation has Reached the Maximum Limit (maxTokensPerGen), any Attempt to Mint a New Token will Lead to a Call Revert",validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,244
findings-37,"`_incrementGeneration()` incorrectly resets `generationMintCounts` of next generation, erasing the count of tokens minted from forging",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,245
validation-721,"The difference in the `listForForging`, `forgeWithListed` checks gives the forger an unfair advantage.",validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,246
findings-45,Self-Forging Exploit in `EntityForging::forgeWithListed` Function,,Commonly known issue involving multiple controlled addresses,Unsatisfactory,,247
validation-1414,Incorrect Equality in EntropyGenerator,,Seemingly AI generated report with no discrete threat exposed,Unsatisfactory,,248
validation-1136,"The GoldenGod ID is Expected to Remain Confidential, However, a Malicious User Can Retrieve it Right From the Start",,Low QA on unneededly expensive VRF,Unsatisfactory,,250
validation-449,Maximum entity generation limit can be exceeded,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,255
findings-142,Forging the same entity multiple times leads to loss of funds for the nuke contract,,Comomly known issue involving multiple controlled addresses,Unsatisfactory,,261
validation-561,[M-01] `EntityForging::forgeWithListed`: Leftover ETH is not refunded to the `msg.sender`.,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,262
validation-922,Incorrect `require` Statement in `writeEntropyBatch1` and `writeEntropyBatch2` Leading to Early 'Golden God' Appearance and Gameplay Imbalance,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,264
validation-497,Players can technically choose the NFT that they want because of poor game randomness,,Low QA on unneededly expensive VRF,Unsatisfactory,,264
validation-113,`mintToken` and `mintWithBudget` miscalculate the `mint price` for the first NFT of gen2+ generations,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,271
validation-861,The lack of a maximum generation check breaks the logic of the game and causes a loss of value for users,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,272
validation-1055,"Entities per Generation Can Exceed 10,000",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,279
validation-696,Lack of check for `maxGeneration` while incrementing generation allows minting of NFTs beyond the maximum cap.,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,279
validation-924,Incorrect random value checks in `EntropyGenerator` violates the rules for the golden god.,validation-154,More than 1 Golden God per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L164,280
findings-102,Forger can forge one more time than allowed due to insufficient validation in `listForForging`  ,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,283
validation-315,Incorrect Token Generation Count Reset Leads to Mismatched Token Tracking,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,285
validation-719,Cannot move to the next generation and mint new Nfts due to access control issue in `EntropyGenerator::initializeAlphaIndices()`,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,306
findings-79,There can be less `The Golden God` entities than expected,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,306
validation-700,Different sets of parent tokens can evaluate to the same average entropy value which takes away the uniqueness of tokens.,validation-477,Known issue but undisclosed on readme,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L153-L179,310
validation-694,TraitForgeNft: Generations without a golden god are possible,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,312
findings-80,The user has the ability to forge beyond the forge potential limit,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,314
validation-914,"Entities Can Forge More Than `forgePotential` Parameter, Leading to Imbalance in `NukeFund` Balance Due to Incorrect Use of `<=` in `EntityForging::listForForging`",validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,317
validation-1327,"Next Generation's `generationMintCounts` Resets to 0, Causing Incorrect Mint Counts",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,327
validation-411,Zero Age Calculation Due to Performance Factor Always Being Zero,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,372
validation-188,Missing input validation in multiple functions,,Low QA on sanity checks,Unsatisfactory,,372
validation-375,[H-1] Reward Manipulation via Weight Update in `DevFund::updateDev`,,Makes no difference. The intent is to have old value of info.weight taken care of prior to new update,Unsatisfactory,,375
validation-711,Incorrect higher mint price for the first token minted in each generation starting from the second generation,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,409
findings-118,User rewards during nuking of NFTs are wrongly calculated leading to a loss of fund for such users,findings-165,Missing slippage to protect against fron-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,415
validation-825,Excess ether sent when EntityForging.forgeWithListed() is not refunded back to the user ,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,24
validation-820,TraitForgeNft.mintWithBudget() can get DOS'd easily ,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,24
validation-1344,Zero Value in performanceFactor Causes Incorrect Age Calculation in calculateAge,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,26
validation-822,`maxGeneration` can get bypassed under normal protocol functions ,validation-929,newGeneration <= maxGeneration could have in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,36
validation-233,Users who buy NFT are excluded from airdrop,validation-229,Seemingly intended logic. Changing it will require messy/extensive update of initialOwners and many others,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L148,41
validation-813,nukeFactor is incorrectly obtained in deriveTokenParameters() which is a deviation from the spec,validation-170,Could round to 0 e.g. when entropy is 999999,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L152,43
validation-1228,Deviation from the spec when determining the maturity of the entity,validation-1039,Maturing slower than expected,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L147-L148,49
validation-562,Pausability cannot be used as pause() and unpause() are not initialized explicitly,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,49
validation-361,Users having NFTs with zero `forgePotential` are unfaily disadvantaged,validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,54
validation-35,Incomplete implementation of `pause` functionality,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,54
validation-1198,Potential DoS  in `fetchListings()`  due to OOG error,validation-291,DOS indeed when array has grown to a large size,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L48-L53,55
validation-591,"When generationMintCounts is incremented, it does not account for forging and nullified",validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,57
validation-854,There is no guarantee that the special entropy with 999999 will be created,validation-651,Possibly 0 golden gods in a generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L206-L216,59
validation-730,Improper access control with initializeAlphaIndices() function,validation-1308,Discord: Only airdrop contract will be owned by TraitForgeNft contract. Owner of the other contracts will be our multisig,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L353,59
validation-285,Users can be blocked from forging NFTs from previous generations,validation-1045,Forging limitation on old parent generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L332,59
validation-564,_incrementGeneration() does not check whether the maximum generation has been reached,validation-929,newGeneration <= maxGeneration could be in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,65
validation-26,Incorrect range selection in `initializeAlphaIndices()` leads to uneven distribution of special case entropy values which means that slot indices 0-511 and 770 are never selected for the special 999999 case,findings-209,Uneven distribution,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntropyGenerator/EntropyGenerator.sol#L181,69
validation-1249,Mint price is incorrectly calculated if the generationMintCounts >= maxTokensPerGen,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,75
validation-363,Incorrect Refund of Excess Budget in `mintWithBudget()`,validation-1379,The unlucky generation transition price,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L190,78
validation-71,Inconsistency in `forgePotential` calculation,validation-295,Logic discrepancy cross contract,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntropyGenerator/EntropyGenerator.sol#L153,81
validation-36,`Forgers` can forge up to `forgePotential + 1` for a given `tokenId`,validation-1375,Trivial change to stem yearly leak,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L87-L90,82
validation-1441,Denial of Service When Minting With Budget,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,83
validation-193,Improper generation increment allows minting more than intended,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,83
validation-240,Flawed token limit check in `mintWithBudget` allows unlimited minting per generation,validation-96,Will not get past generation 1,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/TraitForgeNft/TraitForgeNft.sol#L215,85
validation-1355,Token Generation can go above the Maximum allowed due to Oversignt in Implementation,validation-929,newGeneration <= maxGeneration could have in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,86
validation-14,"Unchecked generation increment can exceed max generation limit, breaking contract invariants",validation-929,newGeneration <= maxGeneration could have in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,90
validation-419,Excess payment is not refunded in `forgeWithListed()` resulting in potential losses for the `merger`,validation-770,Excess ETH stuck in contract and not refunded,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/EntityForging/EntityForging.sol#L125-L126,98
validation-244,Missing External Pause and Unpause Functions Prevent Contract from Being Paused,validation-1354,Missing implementation of pausable functions,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/EntityForging/EntityForging.sol#L10,110
validation-1255,"In `NukeFund::calculateAge()`, `age` can be zero which means zero claims on `NukeFund::nuke()`",validation-458,Could be intended for performanceFactor of 0 won’t age at all,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/NukeFund/NukeFund.sol#L126,113
validation-521,`maxGeneration` limit can be exceeded during forging & minting.,validation-929,newGeneration <= maxGeneration could have in _incrementGeneration() too instead of being limited to forge(),Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L350,118
validation-283,`_incrementGeneration()` resets the mint count for the next generation resulting in inconsistencies.,validation-741,Unneeded reset leads to >10k per generation,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/279b2887e3d38bc219a05d332cbcb0655b2dc644/contracts/TraitForgeNft/TraitForgeNft.sol#L351,121
validation-197,Incorrect claim amount comparison in `nuke` function allows over-claiming or under-claiming,findings-165,Missing slippage to protect against front-running,Satisfactory,https://github.com/code-423n4/2024-07-traitforge/blob/main/contracts/NukeFund/NukeFund.sol#L153-L182,145
validation-736,`forgeWithListed()` function  is downcasting uint256 to uint8 which can lead to silent underflow,,The mod result is 0-9,Unsatisfactory,,22
validation-876,"can get ""fetchListings"" for zero listingCount.",,listingCount is pre-incremented,Unsatisfactory,,31
validation-776,Potential Tax Evasion ,,Commonly known issue on tax evasion via private transfer and deal,Unsatisfactory,,34
validation-134,"Users could claim funds much earlier than intended by calling ""nuke()"", potentially draining the fund rapidly",,lastTokenTransferredTimestamp is updated with block.timestamp in _beforeTokenTransfer,Unsatisfactory,,34
validation-1420,Potential Reentrancy Attack in the `claim` function,,claim() has nonReentrant visibility,Unsatisfactory,,36
validation-850,"we are not adding payable into  claim function in ""DevFund""",,Unneeded as all needed ETH has been sent to the contract via receive(),Unsatisfactory,,36
validation-1188,While loop can result in DoS due to high gas costs,,Budget is user controlled,Unsatisfactory,,37
validation-1415,Risk of lost funds due to lack of zero-address check in functions,,to is msg.sender. Unlikely to be address(0),Unsatisfactory,,38
validation-1180,getNextEntropy() reassigns currentSlotIndex to 0 after reaching the last slot,,Intended loop logic,Unsatisfactory,,38
validation-727,Lack of Future End Time Check in setWhitelistEndTime,,Low QA on admin input mistake,Unsatisfactory,,38
validation-230,Incorrect condition in token minting loop,,Low QA as user can always mint the last token via mintToken(). Failing to address key issue in #96,Unsatisfactory,,39
validation-808,EntityTrading does not implement onERC721Received,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,41
validation-734,Risk of Unintended Disruption Due to Modifiable Critical Parameters,,Needed for leap year. Low QA on admin input mistake,Unsatisfactory,,41
validation-1439,Integer Division Exposes Incorrect Values,,Similar to Analyzer: [L-8] Loss of precision,Unsatisfactory,,42
validation-126,Listed NFT can be impossible to cancel and remain listed forever even if the NFT doesn't exist anymore,,Unlikely to nuke since token listed for sale is in the custody of Entity Trading,Unsatisfactory,,42
validation-1456,Weak Pseudo-random Number Generation,,Low QA on unneededly expensive VRF,Unsatisfactory,,45
validation-809,Using blockhash and block.number is not optimal for randomness purposes,,Low QA on unneededly expensive VRF,Unsatisfactory,,47
validation-563,Setting max generation can be bypassed by forging,,Owner is trusted,Unsatisfactory,,47
validation-438,"Listed tokens can be transferred externally, violating the original owner consistency",,Infeasible as the NFT is alraedy in the custody by the contract,Unsatisfactory,,48
validation-671,Inconsistency when calculating token age time,,Insufficient proof alleging the flaw,Unsatisfactory,,49
validation-1450,Reentrancy Attack Through Cross-Function Race Conditions in EntityTrading.sol,,It's a private function. Calling function typically has nonReentrant visibility,Unsatisfactory,,50
validation-1433,Arbitrary Forge Potential Resetting,,Intended design,Unsatisfactory,,50
validation-847,"wrong implementation of "" receive()"" in DevFund.",,Intended design to prevent ETH stuck in the contract,Unsatisfactory,,50
validation-1461,Re-entrancy Vulnerability in the nuke function,,No actual scenario given,Unsatisfactory,,51
validation-728,`onlyOwner` cannot be used as Ownable is not properly initialized,,The contract is Ownable,Unsatisfactory,,51
validation-1133,cannot buy the NFT if  msg.value is greater than listing price.,,Doesn't make sense for wanting to overpay,Unsatisfactory,,52
validation-782,Unlimited Minting exploit,,"Commonly known issue. While user cap is advised, race grab is welcome",Unsatisfactory,,52
validation-723,_beforeTokenTransfer() hook deviates from ERC721 implementation,,Incorrect assumptions,Unsatisfactory,,52
validation-1210,The slots are only initialized for one generation,,Insufficient proof alleging the flaw,Unsatisfactory,,54
validation-849,Incorrect checking for slot index in getEntropy() and getNextEntropy(),,Insufficient proof alleging the flaw,Unsatisfactory,,55
validation-1469,Unexpected Revenue Distribution,,Intended design,Unsatisfactory,,57
validation-604,Unsafe ERC721 token transfer may lead to locked tokens,,Analyzer: [L-12] Unsafe ERC20 operation(s),Unsatisfactory,,57
validation-177,`mintWithBudget()` and `mintToken()` will always revert since `msg.sender` cannot receive Ether,,Low QA frequently reported by bots in the past,Unsatisfactory,,57
validation-1483,Use of Loops without Check of Gas Limits leading to potential DoS,,Budget is user controlled,Unsatisfactory,,58
validation-439,Listed token IDs can point to inactive listings,,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,60
validation-272,Incorrect reset of forging count allows unlimited forging potential contradicting the intended design where each token has a specific `forgePotential` based on its entropy,,Intended design,Unsatisfactory,,63
validation-830,initializeAlphaIndices() can be overridden by writeEntropyBatch3(),,Insufficient proof alleging the flaw,Unsatisfactory,,64
validation-828,writeEnropyBatch3() public visibility allows to potentially front-run initializeAlphaIndices(),,Insufficient proof alleging the flaw,Unsatisfactory,,64
validation-28,Potential re-listing issue due to `listedTokenIds` mapping not being updated in `cancelListing` function,,Inconsequential as !_listingInfo.isListed == true still when relisting,Unsatisfactory,,64
validation-478,Updating `minimumDaysHeld` negatively impacts users whose tokens are already eligible for nuking.,,Commonly known issue. Owner is trusted,Unsatisfactory,,65
validation-444,Token can be listed for forging forever withouth being able to call cancel listing for forging,,Incorrect assumptions,Unsatisfactory,,65
validation-70,Missing `pseudoRandomValue` validation in `EntropyGenerator::writeEntropyBatch3()`,,Golden god is supposed to appear in batch 3,Unsatisfactory,,65
validation-603,Potential division by zero error in `buyNFT()` function,,Analyzer: [L-3] Division by zero not prevented,Unsatisfactory,,66
validation-326,Token transfer timestamp not updated correctly,,Intended design and incorrect assumptions,Unsatisfactory,,66
validation-1392,No limit on Dev Weight can lead to unfairness in eth distribution,,Low QA on limit boundary,Unsatisfactory,,67
validation-69,`nukeFundAddress` in `TraitForgeNft` is not payable.,,Unneeded in low level call,Unsatisfactory,,69
validation-1295,"amountMinted is wrongly calculated in ""mintWithBudget""",,Prices will be incrementally increased as expected,Unsatisfactory,,71
validation-781, Lack of Slippage Protection in Dynamic Pricing Mint Function,,Prices will be incrementally increased as expected,Unsatisfactory,,72
validation-732,`Forge` function has re-entrancy,,forge() is nonReentrant,Unsatisfactory,,75
validation-1477,Slippage in Reward Distribution Due to Balance Fluctuations,,Intended design catering to extreme case due to prolonged truncation,Unsatisfactory,,81
validation-466,Immediate token nuking vulnerability due to uninitialized transfer timestamp,,lastTokenTransferredTimestamp is updated with block.timestamp in _beforeTokenTransfer,Unsatisfactory,,81
validation-1146,wrong calculation of claimAmount.,,Insufficient proof alleging the flaw,Unsatisfactory,,82
validation-1107,"In `TraitForgeNft::_mintNewEntity()`, the last `tokenId` per generation can never be minted",,generationMintCounts starts from 0,Unsatisfactory,,83
validation-311,Refund-based DoS vulnerability in token minting function,,Low QA frequently reported by bots in the past,Unsatisfactory,,83
validation-237,`Whitelisting` can be bypassed via Token Transfers,,Commonly known issue,Unsatisfactory,,83
validation-15,Incorrect reward calculation in `updateDev` leads to unfair distribution of rewards because pending rewards are calculated based on the old weight,,Makes no difference. The intent is to have old value of info.weight taken care of prior to new update,Unsatisfactory,,84
validation-724,Users can list tokens inside of EntityTrading and then nuke the token before it's bought,,Infeasible as token is under contract custody,Unsatisfactory,,85
validation-246,Lack of duplicate listing check in `listNFTForSale` allows multiple active listings per NFT,,Listed NFT already in custody by the contract,Unsatisfactory,,85
validation-364,Inconsistent Token Balance Update in Transfer Function,,Intended design and incorrect assumptions,Unsatisfactory,,88
validation-195,Incorrect generation increment in `mintWithBudget()`,,_minInternal() will have this taken care of,Unsatisfactory,,92
validation-594,Funds can be locked indefinitely in NukeFund.sol,,Low QA,Unsatisfactory,,95
validation-172,Some contracts cannot fully pause all critical activities.,,Intended design,Unsatisfactory,,95
validation-636,Predictable entropy generation due to use of block.number,,Low QA on unneededly expensive VRF,Unsatisfactory,,98
validation-39,NFT approvals are not cleared when NFT is transfered/sold allowing for abuse,,Will be taken care of by _update(),Unsatisfactory,,99
validation-34,`maxAllowedClaimAmount` for a given fund size may be exceeded in `nuke()`,,Insufficient proof alleging the flaw,Unsatisfactory,,101
validation-320,`ListingForForging` is cancelled upon self-transfer without actual change in `ownership`,,Intended design,Unsatisfactory,,105
validation-1363,Failure to initialize pendingRewards for new developers leads to incorrect reward distribution,,info.pendingRewards is 0 by default,Unsatisfactory,,106
validation-1073,`TraitForge::mintToken()` can be intentionally reverted if the generated `entropyValue` is unfavorable,,nonReentrant is there to thwart the exploit,Unsatisfactory,,106
validation-436,Relisting of tokens can lead to inconsistencies in listings and ghost mappings,,Listed NFT already in custody by the contract,Unsatisfactory,,107
validation-655,Weak Source of Generating Randomness in Entropy Initialization Functions,,Low QA on unneededly expensive VRF,Unsatisfactory,,108
validation-1115,Integer Division Rounding Error Leads to Incorrect Funds Distribution in DevFund Contract,,msg.value is ETH with 18 decimals,Unsatisfactory,,121
validation-1424,Incorrect Reward Calculation in UpdateDev Function Due to Incorrect Order of Operations,,Makes no difference. The intent is to have old value of info.weight taken care of prior to new update,Unsatisfactory,,141
validation-679,Lack of mechanism to ensure all batches are initialized before entropy is used,,Low QA on uninitialized variable,Unsatisfactory,,191